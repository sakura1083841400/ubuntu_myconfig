# shellcheck shell=sh disable=SC2154,SC2120,SC3043,SC2034

# Reference:      https://core.telegram.org/bots/api#sendmessage

# Section(inner): send_json

___x_cmd_telegram_bot___send_json() {
    local req_json ; req_json="$(___x_cmd_cmds_cat)"
    telegram:debug "$(printf "%s" "$req_json" | x jo fmt)"
    local token ; token="$(___x_cmd_telegram_token)" || return 1

    local res
    telegram:debug "$token/$msg_type"
    if ! res="$(___x_cmd_http post json "$token/$msg_type" "$req_json")" ; then
        telegram:error "Failed to send msg, res: $res"
    fi
    printf "%s" "$res"
}

___x_cmd_telegram_bot___send_file() {
    local token ; token="$(___x_cmd_telegram_token)" || return 1

    # send file
    local cmd="___x_cmd_telegram___curl -X POST '$token/$msg_type' -H 'Content-Type:multipart/form-data' -F chat_id=${chat_id} -F '${1}'=@${file_path}"
    local res; res="$(eval "$cmd")" || {
        telegram:debug "Exec cmd: $cmd"
        return 1
    }
    printf "%s" "$res"
}

# EndSection

___x_cmd_telegram_bot(){
    param:subcmd ___x_cmd_telegram_bot    \
        send   "send msg"                 
    param:subcmd:try
    param:run
    telegram:error "Subcommand required"
    ___x_cmd_telegram help
}



___x_cmd_telegram_bot_send() {
    param:subcmd ___x_cmd_telegram_bot_send    \
        text            "send text"            \
        poll            "send Poll"            \
        dice            "send Dice"            \
        venue           "send Venue"           \
        contact         "send Contact"         \
        raw             "send raw json"        \
        stopPoll        "send stopPoll"        \
        location        "send Location"        \
        photo           "send Photo"           \
        video           "send Video"           \
        document        "send Document"        \
        videoNote       "send VideoNote"       \
        audio           "send Audio"           \
        voice           "send Voice"           \
        animation       "send Animation"       \
        chatAction      "send ChatAction"

    param:subcmd:try
    param:run

    ___x_cmd_telegram_bot_send_text "$@"
}

___x_cmd_telegram_bot_send_text() {
    param:scope     telegram
    param:dsl <<A
option:
    #1          "Provide text"      <content>:text
    --chat_id   "Provide chat_id"   <chat_id>:number
A
    param:run

    local text="$1"
    local msg_type="sendMessage"

    ___x_cmd_telegram_bot___send_json <<A
{
    "chat_id": "$chat_id",
    "text": "$text"
}
A
}

___x_cmd_telegram_bot_send_raw() {
    param:scope             telegram
    param:dsl <<A
option:
    #1                  "Provide raw json(If #1 is '-', the json is read from stdin)"      <raw>:json
    --msg_type          "Provide message type"                                             <msg_type>
A
    param:run

    local json="${1}"; [ "$json" != "-" ] || json="$(___x_cmd_cmds_cat)"
    ___x_cmd_telegram_bot___send_json <<A
$json
A
}

___x_cmd_telegram_bot_send_photo() {
    param:scope     telegram
    param:dsl <<A
option:
    --file_path     "file path"         <file_path>:file_path
    --chat_id       "Provide chat_id"   <chat_id>:chat_id
A
    param:run

    local msg_type="sendPhoto"
    ___x_cmd_telegram_bot___send_file "photo" "$msg_type" "$chat_id" "$file_path"
}

___x_cmd_telegram_bot_send_document() {
    param:scope     telegram
    param:dsl <<A
option:
    --file_path     "file path"         <file_path>:file_path
    --chat_id       "Provide chat_id"   <chat_id>:chat_id
A
    param:run

    local msg_type="sendDocument" 
    ___x_cmd_telegram_bot___send_file "document" "$msg_type" "$chat_id" "$file_path"
}

___x_cmd_telegram_bot_send_video() {
    param:scope     telegram
    param:dsl <<A
option:
    --file_path     "file path"         <file_path>:file_path
    --chat_id       "Provide chat_id"   <chat_id>:chat_id
A
    param:run

    local msg_type="sendVideo"
    ___x_cmd_telegram_bot___send_file "video" "$msg_type" "$chat_id" "$file_path"
}

___x_cmd_telegram_bot_send_videoNote() {
    param:scope     telegram
    param:dsl <<A
option:
    --file_path     "file path"         <file_path>:file_path
    --chat_id       "Provide chat_id"   <chat_id>:chat_id
A
    param:run

    local msg_type="sendVideoNote"
    ___x_cmd_telegram_bot___send_file "video_note" "$msg_type" "$chat_id" "$file_path"
}

___x_cmd_telegram_bot_send_audio() {
    param:scope     telegram
    param:dsl <<A
option:
    --file_path     "file path"         <file_path>:file_path
    --chat_id       "Provide chat_id"   <chat_id>:chat_id
A
    param:run

    local msg_type="sendAudio"
    ___x_cmd_telegram_bot___send_file "audio" "$msg_type" "$chat_id" "$file_path"
}

___x_cmd_telegram_bot_send_voice() {
    param:scope     telegram
    param:dsl <<A
option:
    --file_path     "file path"         <file_path>:file_path
    --chat_id       "Provide chat_id"   <chat_id>:chat_id
A
    param:run

    local msg_type="sendVoice"
    ___x_cmd_telegram_bot___send_file "voice" "$msg_type" "$chat_id" "$file_path"
}

___x_cmd_telegram_bot_send_animation() {
    param:scope     telegram
    param:dsl <<A
option:
    --file_path     "file path"         <file_path>:file_path
    --chat_id       "Provide chat_id"   <chat_id>:chat_id
A
    param:run

    local msg_type="sendAnimation"
    ___x_cmd_telegram_bot___send_file "animation" "$msg_type" "$chat_id" "$file_path"
}

___x_cmd_telegram_bot_send_location() {
    param:scope     telegram
    param:dsl <<A
option:
    --latitude      "Latitude of the location"         <latitude>:number
    --longitude     "longitude of the location"        <longitude>:number
    --chat_id       "Provide chat_id"                  <chat_id>:chat_id
A
    param:run
    local msg_type=sendLocation

    ___x_cmd_telegram_bot___send_json <<A    
{
    "chat_id": "$chat_id",
    "latitude" : "$latitude",
    "longitude" : "$longitude"
}
A
}

___x_cmd_telegram_bot_send_venue() {
    param:scope     telegram
    param:dsl <<A
option:
    --latitude      "Latitude of the location"         <latitude>:number
    --longitude     "longitude of the location"        <longitude>:number
    --title         "provide title"                    <title>:text
    --address       "provide address"                  <address>:text
    --chat_id       "Provide chat_id"                  <chat_id>:chat_id
A
    param:run
    local msg_type=sendVenue
    ___x_cmd_telegram_bot___send_json <<A    
{
    "chat_id": "$chat_id",
    "title": "$title",
    "address": "$address",
    "latitude" : "$latitude",
    "longitude" : "$longitude"
}
A
}

___x_cmd_telegram_bot_send_contact() {
    param:scope     telegram
    param:dsl <<A
option:
    --chat_id        "Provide chat_id"             <chat_id>:chat_id
    --phone_number   "Provide phone_number"        <phone_number>:phone_number
    --first_name     "Provide first_name"          <first_name>:text
A
    param:run
    local msg_type=sendContact
    ___x_cmd_telegram_bot___send_json <<A    
{  
    "chat_id": "$chat_id",
    "phone_number": "$phone_number",
    "first_name" : "$first_name"
}
A
}

___x_cmd_telegram_bot_send_poll() {
    param:scope     telegram
    param:dsl <<A
option:
    --chat_id        "Provide chat_id"                                   <chat_id>:chat_id
    --question       "Poll question, 1-300 characters"                   <question>:text
    --options        "A JSON-serialized list of answer options"          <options>:text
A
    param:run
    local msg_type=sendPoll
    options=$(___x_cmd_telegram___get_mobiles "${options}")
    ___x_cmd_telegram_bot___send_json <<A    
{
    "chat_id": "$chat_id",
    "question" : "$question",
    "options" : [ $options ]
}
A
}

___x_cmd_telegram_bot_send_stopPoll() {
    param:scope     telegram
    param:dsl <<A
option:
    --chat_id        "Provide chat_id"                                   <chat_id>:chat_id
    --message_id     "Poll message_id"                                   <message_id>:message_id
A
    param:run
    local msg_type=stopPoll
    ___x_cmd_telegram_bot___send_json <<A    
{
    "chat_id": "$chat_id",
    "message_id" : "$message_id"
}
A
}

___x_cmd_telegram_bot_send_dice() {
    param:scope     telegram
    param:dsl <<A
option:
    --chat_id        "Provide chat_id"                                   <chat_id>:chat_id
A
    param:run
    local msg_type=sendDice
    ___x_cmd_telegram_bot___send_json <<A    
{
    "chat_id": "$chat_id"
}
A
}

___x_cmd_telegram_bot_send_chatAction() {
    param:scope     telegram
    param:dsl <<A
option:
    --chat_id        "Provide chat_id"                                   <chat_id>:chat_id
    --action         "Type of action to broadcast,:[typing, upload_photo, upload_video, upload_voice, upload_document, choose_sticker, find_location,upload_video_note]"                       
                                                                         <action>:text
A
    param:run
    local msg_type=sendChatAction
    ___x_cmd_telegram_bot___send_json <<A    
{
    "chat_id": "$chat_id",
    "action":"$action"
}
A
}
