# shellcheck shell=sh disable=SC2154,SC2120,SC3043

___x_cmd_telegram_token___setting_help(){
    printf "%s %s \n%s\n" \
        "$(___x_cmd_ui yellow 'Run command to add|repleace token:')" \
        "$(___x_cmd_ui bold cyan "\`x telegram token <token>\`")" \
        "$(___x_cmd_ui 'https://core.telegram.org/bots#3-how-do-i-create-a-bot')" >&2 
}

___x_cmd_telegram_token(){
    param:subcmd ___x_cmd_telegram_token      \
        set             "set token"           \
        get             "get token"           \
        unset           "unset token"
    param:subcmd:try

    param:dsl <<A
option:
    #1      "Provide token"      <content>=""
A
    param:run

    if [ -z "$1" ]; then
        ___x_cmd_telegram_token_get
    else
        ___x_cmd_telegram_token_set "$1"
    fi
}

___x_cmd_telegram_token_set(){
    param:dsl <<A
option:
    #1      "Provide token"      <content>=""
A
    param:run

    local token_prefix="https://api.telegram.org/"
    local token="${token_prefix}${1#"$token_prefix"*}"
    local config_path
        config_path=$(___x_cmd_telegram___config_path token)
        printf "%s\n" "$token" > "$config_path"
        telegram:info "token set to $config_path successfully"
}

___x_cmd_telegram_token_get(){
    param:void
    ___x_cmd_cmds_cat "$(___x_cmd_telegram___config_path token)" || {
        telegram:error "No token found"
        ___x_cmd_telegram_token___setting_help
        return 1
    }
}

___x_cmd_telegram_token_unset(){
    param:void
    x rmrf "$(___x_cmd_telegram___config_path token)"
    telegram:info "token unset successfully"
}
