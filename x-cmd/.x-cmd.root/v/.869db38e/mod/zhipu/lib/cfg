# shellcheck shell=dash disable=SC2034

xrc cfgy
___x_cmd_zhipu_cfg(){
    [ "$#" -gt 0 ] || {
        ___x_cmd_zhipu_init
        return
    }

    local op="$1"; shift
    case "$op" in
        -h|--help)      x help -m zhipu --cfg ;;
        *)              ___x_cmd_zhipu_cfg___invoke "$op" "$@" ;;
    esac
}

___x_cmd_zhipu_cur(){
    local X_help_cmd=; X_help_cmd='x help -m zhipu --cur' help:arg:parse
    ___x_cmd_zhipu_cfg --current "$@"
}

___x_cmd_zhipu_init(){
    local cur_apikey=;  local cur_model=; local cur_endpoint
    if [ -f "$(___x_cmd_zhipu_cur --get config)" ]; then
        ___x_cmd_zhipu_cur cur_apikey:=apikey cur_model:=model cur_endpoint:=endpoint
    fi

    zhipu:info "Get the apikey of zhipu ai from $(x ui yellow 'https://open.bigmodel.cn/usercenter/apikeys')"
    ___x_cmd_zhipu_cfg___invoke --init ${cur_apikey:+"--ctrl_exit_strategy"} \
        apikey "Set up the API key of zhipu ai" "$cur_apikey"   '=~*' "^[A-Za-z0-9.]+$" -- \
        model  "Select model of zhipu ai" "${cur_model:-chatglm_std}"  '=' chatglm_pro chatglm_std chatglm_lite -- \
        endpoint  "Set endpoint, not necessary" "$cur_endpoint"
}

# Config setting the key.
# set the default prompt

___X_CMD_ZHIPU_CFG_VARLIST="apikey,model,endpoint"
___x_cmd_zhipu_cfg___invoke(){
    ___x_cmd_cfgy_obj                                               \
        --prefix            ___X_CMD_ZHIPU_CFG_DATA                \
        --default-config    "${___X_CMD_ROOT_CFG}/zhipu/X.cfg.yml" \
        --current-config    "${___X_CMD_ZHIPU_LOCAL_CONFIG}"       \
        --current-profile   "${___X_CMD_ZHIPU_LOCAL_PROFILE}"      \
        --varlist           "$___X_CMD_ZHIPU_CFG_VARLIST"          \
        "$@"
}

