# shellcheck shell=dash

# ___x_cmd_run_by_file
___x_cmd_engine_run(){
    local filepath="${1:?filepath}"; shift
    x:debug "exec: ___x_cmd_engine_run: $filepath"

    if [ -L "$filepath" ]; then
        filepath="$(___x_cmd_readlink_recursive "$filepath")"
        filepath="$(___x_cmd_abspath "$filepath")"
    fi

    if [ -x "$filepath" ]; then
        # In bash and dash. The file mount into the docker container using [ -x <path> ]
        #   does not correctly determine whether the file has execute permissions or not.
        exec 3>&1
        local err
        if err="$("$filepath" "$@" 2>&1 1>&3)" || [ "${err%Permission denied}" = "$err" ]; then
            exec 3<&-
            printf "%s\n" "$err" >&2
            return
        fi
    fi

    local x_
    if ___x_cmd_engine_detect_ "$filepath"; then
        x:debug "Detect file=$filepath to be run by $x_"
        ___x_cmd_engine_run_main "$x_" "$filepath" "$@"
    else
        x:debug "Fail to detect file. File will be run with source: $filepath"
        # [ ! -f "$filepath" ] || ___x_cmd_cmds_cat "$filepath"
        ___x_cmd_engine_run_main source "$filepath" "$@"
    fi
}

# ___x_cmd___run_with_engine
___x_cmd_engine_run_main(){
    local engine="${1:?Please provide engine}";
    local filepath="${2:?Please provide filepath}";        shift 2
    case "$engine" in
        xrc)            ___x_cmd_engine___run_xrc       "$filepath" "$@"    ;;
        source)         ___x_cmd_engine___run_source    "$filepath" "$@"    ;;
        xsh)        (   ___x_cmd_engine___run_source    "$filepath" "$@"; ) ;;
        7z)             ___x_cmd_main 7z x              "$filepath" "$@"    ;;
        txt)            ___x_cmd_cmds_cat         "$filepath" ;;

        awk|cawk)   ___x_cmd cawk          "$filepath" ;;
        mawk)       ___x_cmd mawk          "$filepath" ;;
        gawk)       ___x_cmd gawk          "$filepath" ;;

        python)     ___x_cmd python        "$filepath" "$@" ;;
        julia)      ___x_cmd julia         "$filepath" "$@" ;;
        rl)         ___x_cmd rl            "$filepath" "$@" ;;     # rlang

        perl)       ___x_cmd perl          "$filepath" "$@" ;;
        raku)       ___x_cmd raku          "$filepath" "$@" ;;
        ruby)       ___x_cmd ruby          "$filepath" "$@" ;;

        node)       ___x_cmd node          "$filepath" "$@" ;;
        ts)         ___x_cmd tsnode        "$filepath" "$@" ;;
        deno)       ___x_cmd deno          "$filepath" "$@" ;;

        java)       ___x_cmd java          "$filepath" "$@" ;;
        jar)        ___x_cmd jar           "$filepath" "$@" ;;
        groovy|gvy) ___x_cmd groovy        "$filepath" "$@" ;;
        clojure)    ___x_cmd clojure       "$filepath" "$@" ;;
        scala)      ___x_cmd scala         "$filepath" "$@" ;;
        kotlin)     ___x_cmd kotlin        "$filepath" "$@" ;;

        lua|zig)    ___x_cmd "$engine" --xrun  \
                                    "$filepath" "$@" ;;

        go)         ___x_cmd go run        "$filepath" "$@" ;;     # TODO: how to just run a go file.

        fish)       ___x_cmd fish          "$filepath" "$@" ;;

        doc|docs|xls|xlsx|ppt|pptx|pdf)
                    ___x_cmd open          "$filepath" ;;

        jxa)        ___x_cmd jxa run       "$filepath" "$@" ;;
        ps)         ___x_cmd pwsh run      "$filepath" "$@" ;;

        action)     ___x_cmd action apply  "$filepath" ;;
        script)     ___x_cmd script apply  "$filepath" ;;

        speg)       ___x_cmd script play   "$filepath" ;;

        wx)         ___x_cmd wx run        "$filepath" "$@" ;;

        # TODO: download vlc to play.
        mp3|mp4)
                    ___x_cmd open "$filepath" ;;

        *)          ___x_cmd_main "$engine" "$filepath" "$@" ;;
    esac
}


# ___x_cmd___xrc_run
___x_cmd_engine___run_xrc(){
    local fp="${1:?filepath}"; shift

    local ___X_CMD_XRC_SOURCE_FILE_MAIN_=
    ___x_cmd_xrc_source_file_main_ "$fp" || return 1

    "$___X_CMD_XRC_SOURCE_FILE_MAIN_" "$@"
}

# ___x_cmd___source_run
___x_cmd_engine___run_source(){
    local ___x_cmd_x_source_run_filepath="${1:?filepath}";        shift
    . "$___x_cmd_x_source_run_filepath" "$@"
}
