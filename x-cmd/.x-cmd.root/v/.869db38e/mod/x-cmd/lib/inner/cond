
# Deprecated all.
___x_cmd_case_(){
    local val="${1:?Provide value}"; shift
    local arg
    for arg in "$@"; do
        ___X_CMD_CASE_="${arg#$val:}"
        [ "$___X_CMD_CASE_" = "${arg}" ] || return 0

        ___X_CMD_CASE_="${arg#$val=}"
        [ "$___X_CMD_CASE_" = "$arg" ] || { ___X_CMD_CASE_="$(eval "$___X_CMD_CASE_")"; return 0; }
    done
    ___X_CMD_CASE_=
    return 1
}

# x case win win:
# x case win 'win=echo xxx'
___x_cmd_case(){
    local ___X_CMD_CASE_
    ___x_cmd_case_ "$@" || return
    [ -z "$___X_CMD_CASE_" ] || printf "%s\n" "$___X_CMD_CASE_"
}


# x ifelse '[ $a = a ]' =1 =2
# x ifelse '[ $a = 1 ]' cmd_result=1 cmd_result=2
___x_cmd_ifelse_(){
    local condition="${1:?Provide function}";
    if eval "$condition"; then
        case "$2" in
            "="*)       ___X_CMD_IFELSE_="$(eval "${2#=}")" ;;
            :*)         eval "${2#:}" ;;
            *)          ___X_CMD_IFELSE_="$2" ;;
        esac
    else
        case "$3" in
            "="*)       ___X_CMD_IFELSE_="$(eval "${3#=}")" ;;
            :*)         eval "${3#:}" ;;
            *)          ___X_CMD_IFELSE_="$3" ;;
        esac
    fi
}

___x_cmd_ifelse(){
    local ___X_CMD_IFELSE_
    ___x_cmd_ifelse_ "$@" && printf "%s\n" "$___X_CMD_IFELSE_"
}


