# shellcheck shell=dash
___x_cmd_se_answer(){
    [ "$#" -gt 0 ] ||  N=se M="Please provide a id for the answer" log:ret:64

    local id="$1"; shift
    ___x_cmd_se_answer___app "$id"
}

___x_cmd_se_answer___app(){
    local x_
    ___x_cmd_se_answer___md_ "$@" || return

    if [ -t 1 ] && ___x_cmd_is_interactive; then
        printf "%s\n" "$x_" | ___x_cmd glow
    else
        printf "%s\n" "$x_"
    fi
}

___x_cmd_se_answer___json(){
    ___x_cmd_se___answer_api --id "$1" | ___x_cmd jo .items
}

___x_cmd_se_answer___md_(){
    local answer_id="$1"
    local data
    data="$(___x_cmd_se_answer___json "$answer_id")"

    local question_id
    local title
    local markdown
    ___x_cmd jo env . question_id=.1.question_id title=.1.title markdown=.1.body_markdown <<A
$data
A

    [ -n "$markdown" ] || N=se M="not found answer of [answer_id=$answer_id]"  log:ret:1
    markdown="$(printf "%s\n" "$markdown" | ___x_cmd_cmds sed -e 's|&quot;|"|g' -e "s|&#39;|\'|g")"

    x_="$(printf "%s\n" "
---
title: $title
answerid: $answer_id
questionid: $question_id
---

$markdown
")"
}
