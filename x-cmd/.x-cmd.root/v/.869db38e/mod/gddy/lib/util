# shellcheck shell=dash disable=SC2046,SC2154

___x_cmd_gddy_resp_header() {
    [ -f "$___X_CMD_GDDY_TMP/.____x_cmd_gddy_curl_header" ] || return 1
    ___x_cmd_cmds_cat "$___X_CMD_GDDY_TMP/.____x_cmd_gddy_curl_header"
}

___x_cmd_gddy_resp_code(){
    ___x_cmd_gddy_resp_header | _____x_cmd_gx_get_resp_code_by_header
}

___x_cmd_gddy_http_error(){
    local http_resp_code=""
    http_resp_code="$(___x_cmd_gddy_resp_code)"
    gddy:debug "HTTP CODE: $http_resp_code"
    [ -n "$http_resp_code" ] || return 1

    if [ -n "$http_resp_code" ] && [ "$http_resp_code" -eq 200 ] ; then
        return 0
    else
        gddy:error "HTTP Code is $http_resp_code"
        [ -z "$___X_CMD_GDDY_SHOW_HTTP_CODE" ] || {
            printf "\n"
            if command -v unset 1>/dev/null; then
                ___x_cmd_cmds unset ___X_CMD_GDDY_SHOW_HTTP_CODE
            fi
        }
        return 1
    fi
}

___x_cmd_gddy____printf_error(){
    if ! ___x_cmd_is_interactive || [ ! -t 2 ] || [ -n "$NO_COLOR" ]; then
        printf "  - ErrorMsg: %s\n" "$1" >&2
    else
        printf "  \033[31m-\033[0m \033[1mErrorMsg: \033[31m%s\033[0m\n" "$1" >&2
    fi
}
___x_cmd_gddy____handle_resp(){
    [ -z "$gddy_resp_msg" ] || ___x_cmd_gddy____printf_error "$gddy_resp_msg"
    [ -z "$gddy_resp_err" ] || ___x_cmd_gddy____printf_error "$gddy_resp_err"
}
# EndSection

___x_cmd_gddy_genlist(){
    echo "" | ___x_cmd_cmds_awk -v content="$1" '
        BEGIN{
                print "["
        }
        {
            gsub("[\t]+|[,]", " ",content)
            len = split(content, arr, " ")
            for(i=1; i<=len; ++i){
                print "\""arr[i]"\""
                if(i != len) print ","
            }
        }
        END{ print "]"}
    '
}

___x_cmd_gddy_is_not_interactive_env() {
    [ ! -t 1 ] || ! ___x_cmd_is_interactive
}

___x_cmd_gddy_is_interactive_env(){
    ! ___x_cmd_gddy_is_not_interactive_env
}

