# shellcheck shell=dash
___x_cmd_root(){
    local op="$1"
    case "$op" in
        ls|set|reset|cleanup)
            shift; "___x_cmd_root_$op" "$@"
            ;;
        *)
            ___x_cmd_root_ls ;;
    esac
}

___x_cmd_root_reset(){
    ___x_cmd_root_set DEFAULT
}

# running instance
___x_cmd_root_set(){
    ___X_CMD_ROOT_V="${___X_CMD_ROOT_V:-"${___X_CMD_ROOT}/v"}"
    # ___X_CMD_ROOT_V="${___X_CMD_ROOT}/v"
    # TODO: Remove ___X_CMD_ROOT_V_VERSION
    ___X_CMD_ROOT_V_VERSION="${___X_CMD_ROOT_V}/${___X_CMD_VERSION}"
    ___X_CMD_ROOT_METADATA="${___X_CMD_ROOT_CODE}/.x-cmd/metadata"

    ___X_CMD_ROOT_MOD="${___X_CMD_ROOT_CODE}/mod"
    ___X_CMD_ROOT_ADV="${___X_CMD_ROOT_CODE}/adv"

    # ___X_CMD_ROOT_MOD="${___X_CMD_ROOT_MOD:-${___X_CMD_ROOT_V_VERSION}/mod}"

    ___X_CMD_ROOT_AWKLIB="${___X_CMD_ROOT_MOD}/awk/lib"

    ___X_CMD_ROOT_CTRL="${___X_CMD_ROOT}/ctrl"          # Deprecated
    ___X_CMD_ROOT_BOOT="${___X_CMD_ROOT}/boot"
    ___X_CMD_ROOT_GLOBAL="${___X_CMD_ROOT}/global"
    ___X_CMD_ROOT_LOCAL="${___X_CMD_ROOT}/local"        # Containr using mapping

    # Global config is the default config. The local config store senstive data.
    ___X_CMD_ROOT_CFG="${___X_CMD_ROOT_LOCAL}/cfg";         ___X_CMD_ROOT_GCFG="${___X_CMD_ROOT_GLOBAL}/cfg"

    # This data will never be gc for app have full control of it.
    ___X_CMD_ROOT_DATA="${___X_CMD_ROOT_LOCAL}/data";       ___X_CMD_ROOT_GDATA="${___X_CMD_ROOT_GLOBAL}/data"

    # The log and art, shall never shared. There is global GC for it. It is the result of running X app.
    ___X_CMD_ROOT_ART="${___X_CMD_ROOT_LOCAL}/art"
    ___X_CMD_ROOT_LOG="${___X_CMD_ROOT_LOCAL}/log"

    # CACHE might be categoized to data.
    ___X_CMD_ROOT_CACHE="${___X_CMD_ROOT_LOCAL}/cache"      # Have a specified timeout
    ___X_CMD_ROOT_TMP="${___X_CMD_ROOT_LOCAL}/tmp";         # Shall be deleted once exited

    ___X_CMD_ROOT_SHARED="${___X_CMD_ROOT_GLOBAL}/shared"
    ___X_CMD_ROOT_VCACHE="${___X_CMD_ROOT_GLOBAL}/vcache/${___X_CMD_VERSION}"          # This could be just use SHARED instead.

    # Might be deprecated
    # This is for the login user.
    ___X_CMD_ROOT_USR="${___X_CMD_ROOT_LOCAL}/usr"
}

___x_cmd_root_ls(){
    printf "%s" \
"V:          $___X_CMD_ROOT_V
CODE:       $___X_CMD_ROOT_CODE
ADV:        $___X_CMD_ROOT_ADV
MOD:        $___X_CMD_ROOT_MOD
GDATA:      $___X_CMD_ROOT_GDATA
DATA:       $___X_CMD_ROOT_DATA
USR:        $___X_CMD_ROOT_USR
ART:        $___X_CMD_ROOT_ART
GCFG:       $___X_CMD_ROOT_GCFG
CFG:        $___X_CMD_ROOT_CFG
LOG:        $___X_CMD_ROOT_LOG
CACHE:      $___X_CMD_ROOT_CACHE
TMP:        $___X_CMD_ROOT_TMP
SHARED:     $___X_CMD_ROOT_SHARED
"
}


___x_cmd_root_archive()(
    local output="${1:?Provide tgz destination path}"
    local mod="${2:-min}"
    ___x_cmd_inner_cd "$___X_CMD_ROOT" || return
    case "$mod" in
        min)    x z "$output" art gcfg cfg log ;;
        std)    x z "$output" art gcfg cfg log v ;;
        all)    x z "$output" art gcfg cfg log v tmp shared ;;
    esac
)

___x_cmd_root_reset

