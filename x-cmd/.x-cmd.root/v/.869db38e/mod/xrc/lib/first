# shellcheck shell=dash

# Deprecated. Use 'x first file' instead.
___x_cmd_whichfile(){
    local ___X_CMD_WHICHFILE_
    ___x_cmd_whichfile_ "$@" && printf "%s\n" "$___X_CMD_WHICHFILE_"
}

___x_cmd_whichfile_(){
    while [ "$#" -gt 0 ]; do
        [ ! -f "$1" ] || {
            ___X_CMD_WHICHFILE_=$1
            return 0
        }
        shift
    done
    return 1
}

___x_cmd_first(){
    local x_
    ___x_cmd_first_ "$@" || return
    printf "%s\n" "$x_"
}

# shellcheck disable=SC2016

___x_cmd_first_(){
    local op="$1";  shift
    case "$op" in
        -f|file)        op=-f   ___x_cmd_first___exec   "$@"    ;;
        -d|folder)      op=-d   ___x_cmd_first___exec   "$@"    ;;
        -e|existed)     op=-e   ___x_cmd_first___exec   "$@"    ;;
        *)                      ___x_cmd_first___exec   "$@"    ;;
    esac
}

___x_cmd_first___exec(){
    if [ $# -eq 0 ]; then
        while read -r x_; do
            ! test "$op" "$x_" || {
                return 0        # I doubt it may result in pipe fail in some occassion. It happened in gitb.
            }
        done
    else
        while [ $# -gt 0 ]; do
            ! test "$op" "$1" || {
                x_="$1"
                return 0
            }
            shift
        done
    fi
    x_=
    return 1
}
