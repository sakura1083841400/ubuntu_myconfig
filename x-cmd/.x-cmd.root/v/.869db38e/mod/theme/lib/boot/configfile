

# ___x_cmd_theme_boot___configfile_set      posix vscode starship xxx
# ___x_cmd_theme_boot___configfile_unset    posix vscode
___x_cmd_theme_boot___configfile_set(){
    local envshell="${1:-posix}"
    local terminal="${2:-default}"
    local vendor="$3";      [ -n "$vendor" ]    || N=theme M="Please provide prompt theme vendor value"     log:ret:64
    local name="$4";        [ -n "$name" ]      || N=theme M="Please provide prompt theme name value"       log:ret:64
    local configfile="$___X_CMD_ROOT_CFG/theme/use/$envshell/$terminal"
    ___x_cmd ensurefp "$configfile"
    printf "%s\n" "$vendor" "$name" > "$configfile"
}

___x_cmd_theme_boot___configfile_unset(){
    local envshell="${1:-posix}"
    local terminal="${2:-default}"
    local configdir="$___X_CMD_ROOT_CFG/theme/use/$envshell"
    local configfile="$configdir/$terminal"
    [ -f "$configfile" ] || return 0
    ___x_cmd rmrf "$configfile"
    ! ___x_cmd fsiter --dirempty "$configdir" || ___x_cmd rmrf "$configdir"
}

___x_cmd_theme_boot___configfile_get_(){
    local envshell="${1:-posix}"
    local terminal="${2:-default}"
    local configfile="$___X_CMD_ROOT_CFG/theme/use/$envshell/$terminal"
    vendor=;    name=
    [ -f "$configfile" ] || return
    { read -r vendor && read -r name ; } < "$configfile"
    { [ -n "$vendor" ] && [ -n "$name" ]; } || N=theme M="Fail to fetch vendor in $configfile" log:ret:1
}

___x_cmd_theme_boot___configfile_check(){
    local envshell="${1:-posix}"
    local terminal="${2:-default}"
    local configfile="$___X_CMD_ROOT_CFG/theme/use/$envshell/$terminal"
    [ -f "$configfile" ]
}

# configdir
___x_cmd_theme_boot___configdir_check(){
    local envshell="${1:-posix}"
    local configdir="$___X_CMD_ROOT_CFG/theme/use/$envshell"
    [ -d "$configdir" ]
}

___x_cmd_theme_boot___configdir_unset(){
    local envshell="${1:-posix}"
    local configdir="$___X_CMD_ROOT_CFG/theme/use/$envshell"
    ___x_cmd rmrf "$configdir"
}
