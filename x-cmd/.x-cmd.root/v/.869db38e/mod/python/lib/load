# shellcheck shell=dash

___X_CMD_PYTHON_LOADED=
___x_cmd_python_loaded(){
    [ -n "$___X_CMD_PYTHON_LOADED" ]
}

___x_cmd_python_load(){
    local installable=
    if [ "$1" = "--installable" ]; then
        installable=1
    fi

    if [ -z "$installable" ]; then
        ! ___x_cmd_python_loaded || return 0
    else
        [ "installable" != "$___X_CMD_PYTHON_LOADED" ] || return
    fi

    ___x_cmd_python_load_checkenv || {
        python:debug "Cannot find python installed in this current environment"
        ___x_cmd_python_load_env
        return
    }

    if [ -z "$installable" ]; then
        ___X_CMD_PYTHON_LOADED=1
    else
        ___x_cmd_python_load_checkinstallable || {
            python:warn "Current env is not installable"
            ___x_cmd_python_load_env
            return
        }
        ___X_CMD_PYTHON_LOADED=installable
    fi

    # TODO: In the future, we need to check the current version is good enough.
}

___X_CMD_PYTHON_SHIMAPP_PATH=
___x_cmd_python_load_env(){
    if [ -n "$___X_CMD_PYTHON_SHIMAPP_PATH" ]; then
        return 0
    fi

    local x_=""
    ___x_cmd pkg sphere getbinpath_                 \
        "python" "v3.10.0+23.9.0-0" "bin"               || return 
    
    ___X_CMD_PYTHON_SHIMAPP_PATH="$x_"
    ___X_CMD_PYTHON_LOADED=installable

    # # TODO: add quiet
    # python:debug "Loading python in this shell env using 'x env try python'"
    # x env try python 2>/dev/null || {
    #     python:error -c 'x env try python' "install python failed"
    #     return 1
    # }

    # ___x_cmd_python___cmd(){
    #     command "$@"
    # }
}

# TODO: Add yes and quiet in the future
___x_cmd_python_load_checkenv(){
    ___x_cmd_hasbin python3 && ___x_cmd_hasbin pip3  || return

}

___x_cmd_python_load_checkinstallable(){
    # [ -w "$(command -v python3)" ]
    # [ -w "$___X_CMD_PYTHON_SHIMAPP_PATH" ]

    local x_
    ___x_cmd_whichbin_ pip3 || return
    [ -w "$x_" ]
}
