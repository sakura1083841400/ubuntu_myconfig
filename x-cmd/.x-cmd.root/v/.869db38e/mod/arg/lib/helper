# shellcheck shell=dash disable=SC2142

___x_cmd_arg___init(){
    ___X_CMD_ARG_LOGGERNAME="${1}"
    ___X_CMD_ARG_HELPCMD="${2}"
}

alias arg:init='
    2>/dev/null 1>&2 local ___X_CMD_ARG_LOGGERNAME;
    2>/dev/null 1>&2 local ___X_CMD_ARG_HELPCMD;
    ___x_cmd_arg___init'

alias arg:ret:64='M="${M}${___X_CMD_ARG_HELPCMD:+"
More info: $___X_CMD_ARG_HELPCMD"}" N="${___X_CMD_ARG_LOGGERNAME:-arg}" log:ret:64'

# Section B:

# Introduce a concept in is
___x_cmd_arg___in(){
    [ -n "$1" ] || return 1
    local L="|${L}|";
    [ "${L#*|"${1}"|}" != "$L" ]
}

___x_cmd_arg___cama(){
    ___x_cmd_cama "$1" "${P}"
}

alias arg:1:nonempty='[ -n "$1" ]               ||  M="Please provide non-empty value"                      arg:ret:64'
alias arg:1:int='___x_cmd_is int "$1"           ||  M="Please provide int value. Current value is $1"       arg:ret:64'
alias arg:1:float='___x_cmd_is float "$1"       ||  M="Please provide float value. Current value is $1"     arg:ret:64'
alias arg:1:cama='___x_cmd_arg___cama "$1"      ||  M="Invalid Value $1"                                    arg:ret:64'
alias arg:1:in'=___x_cmd_arg___in "$1"          ||  M="Invalid Value $1"                                    arg:ret:64'

alias arg:2:nonempty='[ -n "$2" ]               ||  M="Please provide non-empty value following $1"         arg:ret:64'
alias arg:2:int='___x_cmd_is int "$2"           ||  M="Please provide int value following $1 ==> $2"        arg:ret:64'
alias arg:2:float='___x_cmd_is float "$2"       ||  M="Please provide float value following $1 ==> $2"      arg:ret:64'
alias arg:2:cama='___x_cmd_arg___cama "$2"      ||  M="Invalid Value following $1 ==> $2"                   arg:ret:64'
alias arg:2:in='___x_cmd_arg___in "$2"          ||  M="Invalid Value following $1 ==> $2"                   arg:ret:64'

