# Author:       Li Junhao           l@x-cmd.com             # xrc
# shellcheck    shell=bash          disable=SC2039,3043,2034,2166

xrc arg awk
___x_cmd log init advise
xrc:mod:lib     advise  env tool util.normal gen_advise man simple subcmd autoload
___x_cmd_advise___main(){
    local X_help_cmd; X_help_cmd='___x_cmd help -m advise' help:arg-null:parse
    local op="$1"; shift
    case "$op" in
        gen_advise|dev|man|simple|subcmd|ls|rm|which|cat|autoload)
                ___x_cmd_advise_"$op" "$@" ;;
        --rm-bootcode)
                ___x_cmd_advise___rm_bootcode ;;
        *)      ___x_cmd_advise___entrance "$op" "$@"
    esac
}


___x_cmd_advise___rm_bootcode(){
    [ -d "$HOME/.x-cmd.root/local/cache/advise/bootcode" ] || return 0
    ___x_cmd rmrf "$HOME/.x-cmd.root/local/cache/advise/bootcode"
}

if ! ___x_cmd_is_suitable_advise_env; then
    ___x_cmd_advise___entrance(){
        advise:warn "advise completion is only available in interactive 'bash' or 'zsh'"
    }
else
    xrc:mod:lib advise  util  helper complete/_index

    if [ -n "$ZSH_VERSION" ]; then
        xrc:mod advise/lib/main.zsh
    elif [ -n "$BASH_VERSION" ]; then
        [ "${BASH_VERSINFO[0]}" -gt 4 ] || [ "${BASH_VERSINFO[0]}" -eq 4 -a "${BASH_VERSINFO[1]}" -ge 2 ] || ___X_CMD_ADVISE_SHELL_BASH_LT_4_2=1
        xrc:mod advise/lib/main.bash
    fi

    ___x_cmd_advise___entrance(){
        local op="${1}"; [ $# -gt 0 ] && shift
        case "$op" in
            init)       ___x_cmd_advise_init        "$@"    ;;
            maxitem)    ___x_cmd_advise_maxitem     "$@"    ;;
            complete)   ___x_cmd_advise_complete    "$@"    ;;
            *)          ___x_cmd_advise_init "$op"  "$@"    ;;    # TODO: open app.
        esac
    }

    ___x_cmd_advise___prepare(){
        if [ -n "$ZSH_VERSION" ]; then
            zstyle ':completion:*:*:*:*:*' menu select
            zstyle ':completion:*' matcher-list 'm:{a-zA-Z-_}={A-Za-z_-}' 'r:|=*' 'l:|=* r:|=*'
            zstyle ':completion:*' sort false
            if ! command -v compinit > /dev/null; then
                advise:debug "autoload compinit"
                { autoload -Uz compinit && compinit -u; } || return
            fi
            ___x_cmd hascmd compdef || {
                advise:debug "Not found command compdef"
                return 1
            }
        elif [ -n "$BASH_VERSION" ]; then
            ___x_cmd hascmd complete || {
                advise:debug "Not found command complete"
                return 1
            }
            bind 'set show-all-if-ambiguous on' || return
            ___x_cmd_advise___ltrim_bash_comp_wordbreaks "@" ":" "="
        fi
    }

    ___x_cmd_advise___rcload(){
        if [ -z "$___X_CMD_ADVISE_LOADED" ] && ___x_cmd_is_interactive_tty; then
            ___X_CMD_ADVISE_LOADED=1

            ! ___x_cmd_advise_autoload___eq_never || return 0
            ___x_cmd_advise___prepare || {
                ___X_CMD_ADVISE_PREPARE_FAILED=1
                return 1
            }

            local x_=; ___x_cmd_advise_autoload_get_ || return 0
            case "$x_" in
                auto)
                    if ___x_cmd_advise_autoload___ifothercompletionloaded; then
                        ___x_cmd_advise_man_load x
                    else
                        ___x_cmd_advise_man_load completion
                        ___x_cmd_advise_man_load x-cmd
                        ___x_cmd_advise_man_load x
                    fi
                    ;;
                all)
                    ___x_cmd_advise_man_load all
                    ;;
                x)
                    ___x_cmd_advise_man_load x
                    ;;
                *)
                    advise:debug "Never load x-cmd advise"
                    return 0 ;;
            esac
        fi
    }

    ___x_cmd_advise___rcload || return 0
fi
