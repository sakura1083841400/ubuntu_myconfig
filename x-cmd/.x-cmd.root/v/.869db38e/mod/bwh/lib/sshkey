# shellcheck    shell=dash disable=SC2154,SC2034
___x_cmd_bwh_sshkey(){
    [ "$#" -gt 0 ] ||   set - ls

    local op="$1"; shift
    case "$op" in
        get|ls)         ___x_cmd_bwh_sshkey_get ;;
        update)         ___x_cmd_bwh_sshkey_update "$@" ;;
        -h|--help)      ___x_cmd_bwh_help sshkey        ;;

        *)              N=bwh M="Unknown subcmd for ___x_cmd_bwh_sshkey ==> $op" log:ret:64 ;;
    esac
}

# TODO: how to delete sshkey ?

# Section: sshkey update

___x_cmd_bwh_sshkey_update(){
    local X_help_cmd='___x_cmd help -m bwh sshkey update';   help:arg:parse

    [ $# -eq 1 ] || N=bwh M="Require argument as ssh_keys" log:ret:64

    local error=; local message=
    local data; data="$( ___x_cmd_bwh_sshkey_update___raw "$1" )"
    ___x_cmd_pipevar data     ___x_cmd jo env . .error .message

    bwh:arg:judge:display:content:yml
}

___x_cmd_bwh_sshkey_update___raw(){
    ___x_cmd_bwh_api updateSshKeys ssh_keys="$1"
}

# EndSection


# Section: sshkey get

___x_cmd_bwh_sshkey_get(){
    local X_help_cmd='___x_cmd help -m bwh sshkey get';   help:arg:parse

    local error=; local message=
    local data; data="$( ___x_cmd_bwh_sshkey_get___raw )"
    ___x_cmd_pipevar data     ___x_cmd jo env . .error .message

    bwh:arg:judge:display:content:bat
}

___x_cmd_bwh_sshkey_get___raw(){
    ___x_cmd_bwh_api getSshKeys
}

# EndSection

