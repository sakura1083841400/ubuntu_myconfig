# shellcheck shell=dash

___x_cmd_dnf_install(){
    if [ $# -eq 0 ]; then
        ___x_cmd_dnf_install___app
    else
        ___x_cmd_dnf___exec install "$@"
    fi
}

___x_cmd_dnf_install___app(){
    local dnffp=;   dnffp="/var/cache/dnf/updates.solv"
    [ -f "$dnffp" ] || {
        dnf:info "Update the software in the repository."
        x dnf upgrade -y || N="dnf" M="dnf update fail" log:ret:1
    }

    { [ -t 1 ] && ___x_cmd_is_interactive; } \
        || {
            ___x_cmd_dnf___lsraw
            return 0
        }

    dnf:info "Use 'x dnf -h' for help."
    dnf:info "Select a package to install, or view information."

    local x_=""
    ___x_cmd_dnf___lsraw_ || return
    local datafile="$x_"
    x_=; ___X_CMD_PICK_SHBIN_CODE="xrc dnf" ___x_cmd_storeread_ x pick --width 40 --col 10 --datafile "$datafile"
    local software="$x_"

    [ -n "$software" ] || {
        dnf:info "Exit because no software is selected."
        return 0
    }

    local id
    x ui select id "What to do NEXT"    \
        "x dnf install   $software"     \
        "x dnf reinstall $software"     \
        "x dnf info      $software"     \
        "browse repo of  $software"      \
        "dnf --help"                    \
        "EXIT"     || return
    case "$id" in
        1)      x dnf install   "$software" ;;
        2)      x dnf reinstall "$software" ;;
        3)      x dnf info      "$software" ;;
        4)      ___x_cmd_dnf___repo_browse "$software" ;;
        5)      x help -m dnf ;;
        6)      return 0 ;;
    esac
}
