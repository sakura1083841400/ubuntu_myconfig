# shellcheck shell=dash

# In 1min ...
___x_cmd_hn_live(){
    local type="${1:-top}"
    local style=app
    { ___x_cmd_is_interactive && [ -t 1 ]; } || style=preview
    while [ "$#" -gt 0 ]; do
        case "$2" in
            --app|--csv|--json|--preview)
                style="${2#--}";    shift ;;

            -h|--help)  ___x_cmd help -m hn "$type"; return ;;
            *)  break ;;
        esac
    done
    local num="${2:-10}"

    case "$style" in
        app)        ___x_cmd_hn___app "$type" ;;
        csv)        ___x_cmd_hn_live___data "$type" "$num" | ___x_cmd_hn___story_csv_style ;;
        json)       ___x_cmd_hn_live___data "$type" "$num" | ___x_cmd_hn___story_json_style ;;
        *)          ___x_cmd_hn_live___data "$type" "$num" | ___x_cmd_hn___story_preview_style ;;
    esac
}

___x_cmd_hn_item___style_pick_(){
    x_=
    local _cmd=
    ___x_cmd_is_interactive || N=hn M="Please provide the item [style=browse|link|reader|preview|json|csv]" log:ret:64
    ___x_cmd ui select ,_cmd "Select the item style"         \
        "browse: Open Hacker News comment page"    \
        "link: Open the article link page"         \
        "reader: Using jina to read the article"   \
        "preview: Preview in current terminal"     \
        "json: Output json format"                 \
        "csv: Output csv format" || return
    x_="${_cmd%%:*}"
    [ -n "$x_" ]
}

___x_cmd_hn_item(){
    local X_help_cmd="___x_cmd help -m hn item"; help:arg-null:parse
    local op=
    case "$1" in
        --csv|--json|--browse|--link|--preview|--reader)
            op="${1#--}"; shift ;;
    esac

    if [ -z "$op" ]; then
        local x_=; ___x_cmd_hn_item___style_pick_ || return
        op="$x_"
    fi

    local id=; for id in "$@"; do
        case "$id" in
            [1-9]*)  ;;
            *)       N=hn M="Please provide the correct item [id=$id]" log:ret:64 ;;
        esac
    done

    case "$op" in
        browse)     ___x_cmd_hn___browse        "$@" ;;
        link)       ___x_cmd_hn___browselink    "$@" ;;
        reader)     ___x_cmd_hn___readerlink    "$@" ;;
        preview)    ___x_cmd_hn___story_data    "$@" | ___x_cmd_hn___story_preview_style ;;
        json)       ___x_cmd_hn___story_data    "$@" | ___x_cmd_hn___story_json_style ;;
        csv)        ___x_cmd_hn___story_data    "$@" | ___x_cmd_hn___story_csv_style ;;
        *)          hn:warn "This display [style=$op] is not supported yet" ;;
    esac
}

___x_cmd_hn_live___data(){
    local type="${1:-top}"
    case "$type" in
        new|top|best|ask|show|job)  ;;
        *)  N=hn M="Not found such [type=$type]" log:ret:64 ;;
    esac

    local start_num=1; local end_num=30
    case "$2" in
        [1-9]*,[1-9]*)  start_num="${2%%,*}";   end_num="${2#*,}"   ;;
        [1-9]*)                                 end_num="${2}"      ;;
        "") ;;
        *)              N=hn M="Please provide an integer num" log:ret:64 ;;
    esac

    start_num=$((start_num + 0))
    end_num=$((end_num + 0))
    hn:info "live data [type=$type] [start=$start_num] [end=$end_num]" # 2>>"$HOME/hn.log"

    local id=""; local arg=""
    ___x_cmd_hn___"$type"_data | ___x_cmd jo list2line | ___x_cmd_cmds sed -n "${start_num},${end_num}p" | {
        while read -r id; do
            hn:debug "[type=$type] [id=$id]"
            arg="$arg $id"
        done
        eval ___x_cmd_hn___story_data "$arg"
    }
}
