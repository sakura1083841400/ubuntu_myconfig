{
"#tldr"
:
[
{
"cmd"
:
"x gh repo ls"
,
"en"
:
"Output as list current user repos"
,
"cn"
:
"罗列输出当前用户仓库"
}
,
{
"cmd"
:
"x gh repo app"
,
"en"
:
"Interactive UI show current user repositories"
,
"cn"
:
"开启交互式表格查看当前用户仓库"
}
]
,
"ls"
:
{
"$ref"
:
"x-advise://gh/data/repo/ls.jso"
,
"#name"
:
{
"x gh repo ls"
:
null
,
"en"
:
"Interactive UI show repo by owner"
,
"cn"
:
"交互式表格显示所属地址仓库"
}
,
"#desc"
:
{
"en"
:
"Interactive UI show repo by owner\n\n`x gh repo ls` is multi-command merge sugar to conveniently use\n* `x gh user repo ls`\n* `x gh org repo ls`\n\nIf you need more control options, Please use them\n"
,
"cn"
:
"交互式表格显示所属地址仓库\n\n`x gh repo ls` 是一个多命令复合命令, 旨在方便快速使用\n* `x gh user repo ls`\n* `x gh org repo ls`\n\n如果你需要更多控制指令, 请使用他们\n"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo ls"
,
"en"
:
"Interactive UI show current user repositories"
,
"cn"
:
"开启交互式表格查看当前用户仓库"
}
,
{
"cmd"
:
"x gh repo ls <org_path>"
,
"en"
:
"Interactive UI show <org_path> repositories"
,
"cn"
:
"开启交互式表格查看组织仓库"
}
,
{
"cmd"
:
"x gh repo ls --type public"
,
"en"
:
"List all current public repositories with Interactive UI"
,
"cn"
:
"用交互式 UI 列出当前所有公开仓库"
}
,
{
"cmd"
:
"x gh repo ls --type public --sort created"
,
"en"
:
"List all currently public repositories ordered by creation date with Interactive UI"
,
"cn"
:
"用交互式 UI, 根据创建时间，列出当前所有公开仓库"
}
]
}
,
"ll"
:
{
"$ref"
:
"x-advise://gh/data/repo/ls.jso"
,
"#name"
:
{
"x gh repo ll"
:
null
,
"en"
:
"List repo by owner"
,
"cn"
:
"罗列仓库"
}
,
"#desc"
:
{
"en"
:
"List repo by owner\n\n`x gh repo ll` is multi-command merge sugar to conveniently use\n* `x gh user repo ll`\n* `x gh org repo ll`\nIf you need more control options or using in script, Please use them\n"
,
"cn"
:
"罗列仓库\n\n`x gh repo ll` 是一个多命令复合命令, 旨在方便快速使用\n* `x gh user repo ll`\n* `x gh org  repo ll`\n如果你需要更多控制指令或者编写脚本, 请使用他们\n"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo ll"
,
"en"
:
"Output as list current user repos"
,
"cn"
:
"以列表的形式输出当前用户仓库"
}
,
{
"cmd"
:
"x gh repo ll <org_path>"
,
"en"
:
"Output as list <org_path> repos"
,
"cn"
:
"以列表的形式输出组织仓库"
}
,
{
"cmd"
:
"x gh repo ll --type public"
,
"en"
:
"List all current public repositories with terminal table"
,
"cn"
:
"用终端表格, 列出当前所有公开仓库"
}
,
{
"cmd"
:
"x gh repo ll --type public --sort created"
,
"en"
:
"List all currently public repositories ordered by creation date with terminal table"
,
"cn"
:
"用终端表格, 根据创建时间，列出当前所有公开仓库"
}
]
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Show repo detailed information"
,
"cn"
:
"显示仓库信息"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo info x-cmd/x-cmd"
,
"en"
:
"View the information about the x-cmd repo"
,
"cn"
:
"查看 x-cmd 仓库的信息"
}
]
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"create"
:
{
"$ref"
:
"x-advise://gh/data/repo/create.jso"
,
"#name"
:
{
"x gh repo create"
:
null
,
"en"
:
"Create repo"
,
"cn"
:
"创建仓库"
}
,
"#desc"
:
{
"en"
:
"Create repo\n\n`x gh repo create` is multi-command merge sugar to conveniently use\n* `x gh user repo create`\n* `x gh org repo create`\nIf you need more control options or using in script, Please use them\n"
,
"cn"
:
"创建仓库\n\n`x gh repo create` 是一个多命令复合命令, 旨在方便快速使用\n* `x gh user repo create`\n* `x gh org repo create`\n如果你需要更多控制指令或者编写脚本, 请使用他们\n"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo create --access public x-cmd"
,
"en"
:
"Create a public repository called x-cmd"
,
"cn"
:
"创建一个名为 x-cmd 的公开仓库"
}
,
{
"cmd"
:
"x gh repo create --license_template BSD-2-Clause --description \"it is my repo\" x-cmd"
,
"en"
:
"Create a GitHub repository named \"x-cmd\" with BSD-2-Clause license and description \"it is my repo\""
,
"cn"
:
"创建一个 license 为 BSD-2-Clause, 仓库描述为 \"it is my repo\" 的, 仓库名为 x-cmd 的仓库"
}
]
}
,
"edit|ed"
:
{
"$ref"
:
"x-advise://gh/data/repo/edit.jso"
,
"#desc"
:
{
"en"
:
"Edit repo configure"
,
"cn"
:
"修改仓库信息"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo edit --access private user/x-cmd"
,
"en"
:
"Change the x-cmd repository to a private repository"
,
"cn"
:
"把 x-cmd 仓库改为私人仓库"
}
,
{
"cmd"
:
"x gh repo edit --name myrepo user/x-cmd"
,
"en"
:
"Rename the repository \"x-cmd\" to \"myrepo\""
,
"cn"
:
"把 x-cmd 仓库重命名为 myrepo"
}
,
{
"cmd"
:
"x gh repo edit --default_branch main --no_issues user/x-cmd"
,
"en"
:
"Change the default branch of the x-cmd repository to 'main' and disable issue creation"
,
"cn"
:
"把 x-cmd 仓库的默认分支切换成 main， 并关闭仓库的issue 提交功能"
}
]
}
,
"rename"
:
{
"#desc"
:
{
"en"
:
"Rename repo"
,
"cn"
:
"重命名仓库"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo rename -r <owner>/<old_name> <new_name>"
,
"en"
:
"repository rename <owner>/<old_name> => <new_name>"
,
"cn"
:
"重命名仓库 <owner>/<old_name> => <new_name>"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore rename prompt interception"
,
"cn"
:
"忽略命令行重命名拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Repo Rename"
,
"cn"
:
"仓库重命名"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo"
,
"cn"
:
"删除仓库"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo rm <owner>/<repo>"
,
"en"
:
"Remove the <owner>/<repo> repo"
,
"cn"
:
"删除 <owner>/<repo> 仓库"
}
]
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
,
"browse|b"
:
{
"#desc"
:
{
"en"
:
"Open repo in the web browser"
,
"cn"
:
"使用浏览器打开仓库"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
,
"cl|clone"
:
{
"#desc"
:
{
"en"
:
"Clone repo from GitHub"
,
"cn"
:
"克隆 GitHub 仓库"
}
,
"$ref"
:
"x-advise://git/data/clone.jso"
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
,
"fork"
:
{
"#desc"
:
{
"en"
:
"Fork repo from GitHub"
,
"cn"
:
"复刻 GitHub 仓库"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo fork <owner/repo>"
,
"en"
:
"Fork <owner/repo> repo to current user repositories"
,
"cn"
:
"复制 <owner/repo> 仓库到当前用户仓库中"
}
]
,
"--org"
:
{
"#synopsis"
:
"<org_path>"
,
"#desc"
:
{
"en"
:
"Forking into an organization"
,
"cn"
:
"复制仓库到组织"
}
}
,
"--name"
:
{
"#synopsis"
:
"<name>"
,
"#desc"
:
{
"en"
:
"A new name for the fork repository"
,
"cn"
:
"仓库重命名"
}
}
,
"#option:Optional"
:
[
"--org"
,
"--name"
]
,
"--all_branch"
:
{
"#desc"
:
{
"en"
:
"Fork with the all branch"
,
"cn"
:
"复制所有分支"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Target repo <ownerPath>/<RepoPath>"
,
"cn"
:
"目标仓库 <所属空间地址>/<仓库地址>"
}
}
}
,
"download"
:
{
"#desc"
:
{
"en"
:
"Download repo archive from GitHub"
,
"cn"
:
"下载 GitHub 仓库源码快照"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo download <owner>/<repo>"
,
"en"
:
"Download <owner>/<repo> repo default branch of the tarball archive on the current directory"
,
"cn"
:
"下载 <owner>/<repo> 仓库默认分支的 tar 压缩包快照于当前目录"
}
,
{
"cmd"
:
"x gh repo download <owner>/<repo>@<git_ref> ./<repo>.zip"
,
"en"
:
"Download <owner>/<repo> repo specified ref <commit SHA|branch|tag> of the zipball archive in the current directory"
,
"cn"
:
"下载 <owner>/<repo> 仓库并指定的提交指针 <commit SHA|branch|tag> 的 zip 压缩包快照于当前目录"
}
,
{
"cmd"
:
"x gh repo download <owner>/<repo> ./<dir>"
,
"en"
:
"Download <owner>/<repo> repo and decompress archive repo files to <dir> directory path"
,
"cn"
:
"下载 <owner>/<repo> 仓库并解压仓库文件到 <dir> 目录路径"
}
]
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<ownerPath>/<RepoPath> (default branch) or <ownerPath>/<RepoPath>@<ref>"
,
"cn"
:
"<所属空间地址>/<仓库地址> (默认分支) 或 <所属空间地址>/<仓库地址>@<提交对象的指针>"
}
}
,
"#2"
:
{
"#desc"
:
{
"en"
:
".tar.gz or .zip archive file path or decompress archive to directory path"
,
"cn"
:
".tar.gz 或 .zip 压缩包文件路径 或 解压仓库文件到指定目录路径"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"apply"
:
{
"#desc"
:
{
"en"
:
"Manage repo by declare configure"
,
"cn"
:
"通过声明配置管理仓库"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"declare file path(yml, json), stdin '-'"
,
"cn"
:
"声明式配置文件路径(yml, json), stdin '-'"
}
}
,
"#n"
:
{
"#desc"
:
{
"en"
:
"alias replace list"
,
"cn"
:
"别名替换列表"
}
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo apply ./repo.yml"
,
"en"
:
"Use repo.yml declare configure manage repo"
,
"cn"
:
"使用 repo.yml 声明配置管理仓库"
}
,
{
"cmd"
:
"x gh repo apply ./repo.yml bot=x-cmd-bot"
,
"en"
:
"Use repo.yml declare configure manage repo, And replace configure's user 'bot' alias name to 'x-cmd-bot'"
,
"cn"
:
"使用 repo.yml 声明配置管理仓库, 并将配置中的别名用户 'bot' 替换为 'x-cmd-bot'"
}
,
{
"cmd"
:
"cat ./repo.yml | x gh repo apply -"
,
"en"
:
"Use stdin declare configure data manage repo"
,
"cn"
:
"使用标准输入流配置数据管理仓库"
}
]
}
,
"team"
:
{
"#desc"
:
{
"en"
:
"List repository teams"
,
"cn"
:
"罗列仓库的团队列表"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
}
,
"collaborator|c"
:
{
"#desc"
:
{
"en"
:
"repo collaborator management"
,
"cn"
:
"仓库成员管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo collaborator ls --repo <owner>/<repo>"
,
"en"
:
"List <owner>/<repo> repo collaborator"
,
"cn"
:
"以列表格式罗列仓库 <owner>/<repo> 的成员"
}
,
{
"cmd"
:
"x gh repo collaborator add --repo <org>/<repo> --permission push <user>"
,
"en"
:
"Add <user> collaborator to <org>/<repo>. And the permission is push"
,
"cn"
:
"添加 <user> 成员到 <org>/<repo> 之中. 并赋予推送 <push> 权限"
}
]
,
"ls"
:
{
"#desc"
:
{
"en"
:
"Interactive UI show repo collaborator"
,
"cn"
:
"交互式表格罗列仓库成员"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--affiliation"
:
{
"#synopsis"
:
"<affiliation>"
,
"#desc"
:
{
"en"
:
"Filter collaborators returned by their affiliation"
,
"cn"
:
"筛选按隶属关系返回的仓库成员"
}
,
"#1"
:
{
"#cand"
:
[
{
"outside"
:
{
"#desc"
:
{
"en"
:
"All outside collaborators of an organization-owned repository"
,
"cn"
:
"组织拥有的仓库的所有外部协作者"
}
}
}
,
{
"direct"
:
{
"#desc"
:
{
"en"
:
"All collaborators with permissions to an organization-owned repository"
,
"cn"
:
"有权访问组织拥有的仓库的所有协作者"
}
}
}
,
{
"all"
:
{
"#desc"
:
{
"en"
:
"All collaborators the authenticated user can see"
,
"cn"
:
"经过身份验证的用户可以看到的所有协作者"
}
}
}
]
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--csv"
:
{
"#desc"
:
{
"en"
:
"output csv data"
,
"cn"
:
"以 csv 格式输出获取数据"
}
}
,
"--yml"
:
{
"#desc"
:
{
"en"
:
"output yml data"
,
"cn"
:
"以 yml 格式输出获取数据"
}
}
,
"#option:Required"
:
[
"--repo|-r"
]
,
"#option:Optional"
:
[
"--affiliation"
,
"--page"
,
"--per_page"
]
}
,
"ll"
:
{
"#desc"
:
{
"en"
:
"List repo collaborator"
,
"cn"
:
"罗列仓库成员"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo collaborator ll --repo <repo>"
,
"en"
:
"List current user repository's collaborators"
,
"cn"
:
"罗列当前用户仓库 <repo> 中的仓库成员"
}
,
{
"cmd"
:
"x gh repo collaborator ll --repo <org_path>/<repo>"
,
"en"
:
"List show <org_path>/<repo> org repository's collaborators"
,
"cn"
:
"罗列 <org_path>/<repo> 组织仓库中的仓库成员"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--affiliation"
:
{
"#synopsis"
:
"<affiliation>"
,
"#desc"
:
{
"en"
:
"Filter collaborators returned by their affiliation"
,
"cn"
:
"筛选按隶属关系返回的仓库成员"
}
,
"#1"
:
{
"#cand"
:
[
{
"outside"
:
{
"#desc"
:
{
"en"
:
"All outside collaborators of an organization-owned repository"
,
"cn"
:
"组织拥有的仓库的所有外部协作者"
}
}
}
,
{
"direct"
:
{
"#desc"
:
{
"en"
:
"All collaborators with permissions to an organization-owned repository"
,
"cn"
:
"有权访问组织拥有的仓库的所有协作者"
}
}
}
,
{
"all"
:
{
"#desc"
:
{
"en"
:
"All collaborators the authenticated user can see"
,
"cn"
:
"经过身份验证的用户可以看到的所有协作者"
}
}
}
]
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"#option:Required"
:
[
"--repo|-r"
]
,
"#option:Optional"
:
[
"--affiliation"
,
"--page"
,
"--per_page"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--csv"
:
{
"#desc"
:
{
"en"
:
"output csv data"
,
"cn"
:
"以 csv 格式输出获取数据"
}
}
,
"--yml"
:
{
"#desc"
:
{
"en"
:
"output yml data"
,
"cn"
:
"以 yml 格式输出获取数据"
}
}
}
,
"add"
:
{
"#desc"
:
{
"en"
:
"Add repo collaborator"
,
"cn"
:
"添加仓库成员"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo collaborator add --repo <org>/<repo> --permission push <user>"
,
"en"
:
"Add <user> collaborator to <org>/<repo>. And the permission is push"
,
"cn"
:
"添加 <user> 成员到 <org>/<repo> 之中. 并赋予推送 <push> 权限"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--permission|-p"
:
{
"#synopsis"
:
"<permission>"
,
"#desc"
:
{
"en"
:
"collaborator permission"
,
"cn"
:
"成员权限"
}
,
"#1"
:
{
"#cand"
:
[
{
"pull"
:
{
"#desc"
:
{
"en"
:
"Grant pull permission to collaborators"
,
"cn"
:
"授予合作者拉取的权限"
}
}
}
,
{
"triage"
:
{
"#desc"
:
{
"en"
:
"Grant triage permission to collaborators"
,
"cn"
:
"授予合作者分类的权限"
}
}
}
,
{
"push"
:
{
"#desc"
:
{
"en"
:
"Grant push permission to collaborators"
,
"cn"
:
"授予合作者推送的权限"
}
}
}
,
{
"maintain"
:
{
"#desc"
:
{
"en"
:
"Grant maintain permission to collaborators"
,
"cn"
:
"授予合作者维护的权限"
}
}
}
,
{
"admin"
:
{
"#desc"
:
{
"en"
:
"Grant administrator permission to collaborators"
,
"cn"
:
"授予合作者管理员的权限"
}
}
}
]
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"user login path"
,
"cn"
:
"用户空间地址"
}
,
"#exec"
:
"xrc gh && ___x_cmd_gh___advise_ls_avatar_usename"
}
,
"#n"
:
{
"#exec"
:
"xrc gh && ___x_cmd_gh___advise_ls_avatar_usename"
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit   repo collaborator role"
,
"cn"
:
"修改仓库成员权限"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo collaborator edit --repo <org>/<repo> --permission push <user>"
,
"en"
:
"Edit <user> collaborator as push permission of <org>/<repo>"
,
"cn"
:
"修改<org>/<repo> 之中的 <user> 成员权限为 push 权限"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--permission|-p"
:
{
"#synopsis"
:
"<permission>"
,
"#desc"
:
{
"en"
:
"The permission to grant the collaborator"
,
"cn"
:
"授予仓库成员的权限"
}
,
"#1"
:
{
"#cand"
:
[
{
"pull"
:
{
"#desc"
:
{
"en"
:
"Grant pull permission to collaborators"
,
"cn"
:
"授予合作者拉取的权限"
}
}
}
,
{
"triage"
:
{
"#desc"
:
{
"en"
:
"Grant triage permission to collaborators"
,
"cn"
:
"授予合作者分类的权限"
}
}
}
,
{
"push"
:
{
"#desc"
:
{
"en"
:
"Grant push permission to collaborators"
,
"cn"
:
"授予合作者推送的权限"
}
}
}
,
{
"maintain"
:
{
"#desc"
:
{
"en"
:
"Grant maintain permission to collaborators"
,
"cn"
:
"授予合作者维护的权限"
}
}
}
,
{
"admin"
:
{
"#desc"
:
{
"en"
:
"Grant administrator permission to collaborators"
,
"cn"
:
"授予合作者管理员的权限"
}
}
}
]
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"user login path"
,
"cn"
:
"用户空间地址"
}
,
"#exec"
:
"xrc gh && ___x_cmd_gh___advise_ls_avatar_usename"
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo collaborator"
,
"cn"
:
"移除仓库成员"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略删除提示拦截"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"user login path"
,
"cn"
:
"用户空间地址"
}
,
"#exec"
:
"xrc gh && ___x_cmd_gh___advise_ls_avatar_usename"
}
,
"#n"
:
{
"#exec"
:
"xrc gh && ___x_cmd_gh___advise_ls_avatar_usename"
}
}
,
"invitation"
:
{
"#desc"
:
{
"en"
:
"repo invitations management"
,
"cn"
:
"仓库成员邀请函管理"
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List invitation for repo or current user"
,
"cn"
:
"罗列仓库或当前用户的邀请函"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<RepoPath> (empty is for current user)"
,
"cn"
:
"<所属空间地址>/<仓库地址> (不填写这显示当前用户邀请函列表)"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit repository invitation permission"
,
"cn"
:
"修改仓库邀请函权限"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--permissions|-p"
:
{
"#synopsis"
:
"<permission>"
,
"#desc"
:
{
"en"
:
"invitation permission"
,
"cn"
:
"邀请函权限"
}
,
"#1"
:
{
"#cand"
:
[
{
"pull"
:
{
"#desc"
:
{
"en"
:
"Grant pull permission to collaborators"
,
"cn"
:
"授予合作者拉取的权限"
}
}
}
,
{
"triage"
:
{
"#desc"
:
{
"en"
:
"Grant triage permission to collaborators"
,
"cn"
:
"授予合作者分类的权限"
}
}
}
,
{
"push"
:
{
"#desc"
:
{
"en"
:
"Grant push permission to collaborators"
,
"cn"
:
"授予合作者推送的权限"
}
}
}
,
{
"maintain"
:
{
"#desc"
:
{
"en"
:
"Grant maintain permission to collaborators"
,
"cn"
:
"授予合作者维护的权限"
}
}
}
,
{
"admin"
:
{
"#desc"
:
{
"en"
:
"Grant administrator permission to collaborators"
,
"cn"
:
"授予合作者管理员的权限"
}
}
}
,
{
"read"
:
{
"#desc"
:
{
"en"
:
"Grant read permission to collaborators"
,
"cn"
:
"授予合作者阅读的权限"
}
}
}
,
{
"write"
:
{
"#desc"
:
{
"en"
:
"Grant write permission to collaborators"
,
"cn"
:
"授予合作者编辑的权限"
}
}
}
]
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Invitation ID (obtain by `x gh repo collaborator invitation ls`)"
,
"cn"
:
"邀请函 ID (可通过 `x gh repo collaborator invitation ls` 获取)"
}
}
}
,
"accept"
:
{
"#desc"
:
{
"en"
:
"Accept invitation for user"
,
"cn"
:
"接受邀请函"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Invitation ID (obtain by `x gh repo collaborator invitation ls`)"
,
"cn"
:
"邀请函 ID (可通过 `x gh repo collaborator invitation ls` 获取)"
}
}
,
"#n"
:
{
"#desc"
:
{
"en"
:
"Invitation ID"
,
"cn"
:
"邀请函 ID"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Decline invitation for user"
,
"cn"
:
"拒绝并删除邀请函"
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Invitation ID (obtain by `x gh repo collaborator invitation ls`)"
,
"cn"
:
"邀请函 ID (可通过 `x gh repo collaborator invitation ls` 获取)"
}
}
,
"#n"
:
{
"#desc"
:
{
"en"
:
"Invitation ID"
,
"cn"
:
"邀请函 ID"
}
}
}
,
"cancel"
:
{
"#desc"
:
{
"en"
:
"Cancel the invitation by the repository"
,
"cn"
:
"取消仓库发出的邀请函"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Invitation ID (obtain by `x gh repo collaborator invitation ls`)"
,
"cn"
:
"邀请函 ID (可通过 `x gh repo collaborator invitation ls` 获取)"
}
}
,
"#n"
:
{
"#desc"
:
{
"en"
:
"Invitation ID"
,
"cn"
:
"邀请函 ID"
}
}
}
}
}
,
"file"
:
{
"#desc"
:
{
"en"
:
"repo collaborator management"
,
"cn"
:
"仓库文件管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo file ls --repo <owner/repo>"
,
"en"
:
"List repository root directory contents"
,
"cn"
:
"罗列仓库根目录的文件"
}
,
{
"cmd"
:
"x gh repo file ls --repo <owner/repo> <dir>"
,
"en"
:
"List repository specified directory <dir> contents"
,
"cn"
:
"罗列仓库指定目录 <dir> 的文件"
}
,
{
"cmd"
:
"x gh repo file upload --repo <owner/repo> --message <commit> --file <base_file_path> <target_file_path>"
,
"en"
:
"Upload local <base_file_path> file <owner/repo> github repository default branch <target_file_path>"
,
"cn"
:
"上传本地 <base_file_path> 文件到 <owner/repo> github 仓库默认分支的 <target_file_path>"
}
]
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List repository directory contents"
,
"cn"
:
"罗列仓库目录的文件"
}
,
"#tip"
:
[
{
"en"
:
"If you want to list all files, you can use `x gh repo file tree` command"
,
"cn"
:
"最大罗列 1000 文件, 如果想罗列更多文件, 可以使用 `x gh repo file tree` 命令"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--ref"
:
{
"#synopsis"
:
"<refs>"
,
"#desc"
:
{
"en"
:
"The name of the commit/branch/tag. Default using default branch"
,
"cn"
:
"提交/分支/标签的名称. 默认使用默认分支"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--csv"
:
{
"#desc"
:
{
"en"
:
"output csv data"
,
"cn"
:
"以 csv 格式输出获取数据"
}
}
,
"--yml"
:
{
"#desc"
:
{
"en"
:
"output yml data"
,
"cn"
:
"以 yml 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"repo dirname path. Default is root path"
,
"cn"
:
"仓库目录路径. 默认为根目录"
}
,
"#exec"
:
"___x_cmd_advise__dir"
}
}
,
"tree"
:
{
"#desc"
:
{
"en"
:
"List repository directory contents tree"
,
"cn"
:
"罗列仓库目录的文件树"
}
,
"#tip"
:
[
{
"en"
:
"The limit for the tree array is 100,000 entries with a maximum size of 7 MB when using the recursive parameter."
,
"cn"
:
"当使用递归参数时, 树数组的限制为 100,000 个, 最大为 7 MB."
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--recursive"
:
{
"#desc"
:
{
"en"
:
"List the contents of all directories recursively"
,
"cn"
:
"递归罗列目录的内容"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"the target tree sha. Default is repo root path"
,
"cn"
:
"目标 tree sha. 默认为仓库根目录"
}
}
}
,
"upload"
:
{
"#desc"
:
{
"en"
:
"Upload file to repository"
,
"cn"
:
"上传文件到仓库"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo file upload --repo <owner/repo> --message <commit> --file <base_file_path> <target_file_path>"
,
"en"
:
"Upload local <base_file_path> file <owner/repo> github repository default branch <target_file_path>"
,
"cn"
:
"上传本地 <base_file_path> 文件到 <owner/repo> github 仓库默认分支的 <target_file_path>"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--file"
:
{
"#synopsis"
:
"<path>"
,
"#desc"
:
{
"en"
:
"base upload file path"
,
"cn"
:
"上传本地文件路径"
}
,
"#1"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"--message"
:
{
"#synopsis"
:
"<str>"
,
"#desc"
:
{
"en"
:
"The commit message"
,
"cn"
:
"提交信息"
}
}
,
"--branch"
:
{
"#synopsis"
:
"<name>"
,
"#desc"
:
{
"en"
:
"The branch name. Default using default branch"
,
"cn"
:
"分支名称. 默认使用默认分支"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--file"
,
"--message"
]
,
"#option:Optional"
:
[
"--branch"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Target upload repo path"
,
"cn"
:
"目标上传仓库路径"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"download"
:
{
"#desc"
:
{
"en"
:
"Download file from repo"
,
"cn"
:
"从仓库下载文件"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--ref"
:
{
"#synopsis"
:
"<refs>"
,
"#desc"
:
{
"en"
:
"The name of the commit/branch/tag. Default using default branch"
,
"cn"
:
"提交/分支/标签的名称. 默认使用默认分支"
}
}
,
"--endpoint"
:
{
"#synopsis"
:
"<url>"
,
"#desc"
:
{
"en"
:
"Download endpoint. Provide private deployment"
,
"cn"
:
"下载的 URL endpoint. 提供私有部署"
}
}
,
"#option:Required"
:
[
"--repo|-r"
]
,
"#option:Optional"
:
[
"--ref"
,
"--endpoint"
]
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore overwrite prompt interception"
,
"cn"
:
"忽略命令行覆盖拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Target repo file path"
,
"cn"
:
"目标仓库文件路径"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
,
"#2"
:
{
"#desc"
:
{
"en"
:
"Download to the specified local file path. (Optional current directory)"
,
"cn"
:
"下载到指定本地文件路径. (可选 下载到当前目录)"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
}
}
,
"pr"
:
{
"#desc"
:
{
"en"
:
"repo pull request management"
,
"cn"
:
"仓库 pull request 管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo pr ls --repo <owner/repo>"
,
"en"
:
"List <owner/repo> state is open PR"
,
"cn"
:
"罗列出状态为开启的 pull request 列表"
}
,
{
"cmd"
:
"x gh repo pr merge --repo <owner/repo> --merge_method squash <pr_number>"
,
"en"
:
"Squash Merge <pr_number> PR on <owner/repo>"
,
"cn"
:
"扁平化合并 <pr_number> pull request 于 <owner/repo>"
}
]
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List pull requests"
,
"cn"
:
"罗列仓库 pull requests"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo pr ls --repo <owner/repo>"
,
"en"
:
"List state is open pull requests"
,
"cn"
:
"罗列出状态为开启的 pull request 列表"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--base"
:
{
"#synopsis"
:
"<branch>"
,
"#desc"
:
{
"en"
:
"Filter pulls by base branch name"
,
"cn"
:
"根据目标分支名称过滤 pull request"
}
}
,
"--head"
:
{
"#synopsis"
:
"<ref>"
,
"#desc"
:
{
"en"
:
"Filter pulls by base branch name"
,
"cn"
:
"根据目标分支名称过滤 pull request"
}
}
,
"--state"
:
{
"#synopsis"
:
"<state>"
,
"#desc"
:
{
"en"
:
"Filter pulls by state"
,
"cn"
:
"根据状态过滤 pull request"
}
,
"#1"
:
{
"#cand"
:
[
{
"open"
:
{
"#desc"
:
{
"en"
:
"The status of the pull request is open"
,
"cn"
:
"pull request 的状态为正在进行"
}
}
}
,
{
"closed"
:
{
"#desc"
:
{
"en"
:
"The status of the pull request is closed"
,
"cn"
:
"pull request 的状态为已关闭"
}
}
}
,
{
"merged"
:
{
"#desc"
:
{
"en"
:
"The status of the pull request is closed"
,
"cn"
:
"pull request 的状态为已合并"
}
}
}
,
{
"all"
:
{
"#desc"
:
{
"en"
:
"The status of pull request is open,closed and merged"
,
"cn"
:
"pull request 的状态为正在进行，已关闭和已合并"
}
}
}
]
}
}
,
"--sort"
:
{
"#synopsis"
:
"<way>"
,
"#desc"
:
{
"en"
:
"Sort pull requests"
,
"cn"
:
"排序方式"
}
,
"#1"
:
{
"#cand"
:
[
{
"created"
:
{
"#desc"
:
{
"en"
:
"Sort results based on creation date"
,
"cn"
:
"根据创建的日期对结果进行排序"
}
}
}
,
{
"updated"
:
{
"#desc"
:
{
"en"
:
"Sort results based on updated date"
,
"cn"
:
"根据更新的日期对结果进行排序"
}
}
}
,
{
"popularity"
:
{
"#desc"
:
{
"en"
:
"Sort by the number of comments"
,
"cn"
:
"根据评论数量对结果进行排序"
}
}
}
,
{
"long-running"
:
{
"#desc"
:
{
"en"
:
"Sort by date created and will limit the results to pull requests that have been open for more than a month and have had activity within the past month"
,
"cn"
:
"根据创建的日期进行排序，并将结果限制为提取已打开一个月以上并在过去一个月内有活动的请求"
}
}
}
]
}
}
,
"--direction"
:
{
"#synopsis"
:
"<direction>"
,
"#desc"
:
{
"en"
:
"Sort pull requests"
,
"cn"
:
"排序方向"
}
,
"#1"
:
{
"#cand"
:
[
{
"asc"
:
{
"#desc"
:
{
"en"
:
"Ascending"
,
"cn"
:
"升序"
}
}
}
,
{
"desc"
:
{
"#desc"
:
{
"en"
:
"Descending"
,
"cn"
:
"降序"
}
}
}
]
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"#option:Required"
:
[
"--repo|-r"
]
,
"#option:Optional"
:
[
"--base"
,
"--head"
,
"--state"
,
"--sort"
,
"--direction"
,
"--page"
,
"--per_page"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--csv"
:
{
"#desc"
:
{
"en"
:
"output csv data"
,
"cn"
:
"以 csv 格式输出获取数据"
}
}
,
"--yml"
:
{
"#desc"
:
{
"en"
:
"output yml data"
,
"cn"
:
"以 yml 格式输出获取数据"
}
}
}
,
"merge"
:
{
"#desc"
:
{
"en"
:
"Merge pull request"
,
"cn"
:
"合并 pull request"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo pr merge --repo <owner/repo> --merge_method squash <pr_number>"
,
"en"
:
"Squash Merge <pr_number> PR on <owner/repo>"
,
"cn"
:
"扁平化合并 <pr_number> pull request 于 <owner/repo>"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--merge_method"
:
{
"#synopsis"
:
"<merge_method>"
,
"#desc"
:
{
"en"
:
"merge method"
,
"cn"
:
"合并方式"
}
,
"#1"
:
{
"#cand"
:
[
{
"merge"
:
{
"#desc"
:
{
"en"
:
"The merge method to use merge"
,
"cn"
:
"使用 merge 的合并方式"
}
}
}
,
{
"squash"
:
{
"#desc"
:
{
"en"
:
"The merge method to use squash"
,
"cn"
:
"使用 squash 的合并方式"
}
}
}
,
{
"rebase"
:
{
"#desc"
:
{
"en"
:
"The merge method to use rebase"
,
"cn"
:
"使用 rebase 的合并方式"
}
}
}
]
}
}
,
"--commit_title"
:
{
"#synopsis"
:
"<title>"
,
"#desc"
:
{
"en"
:
"Title for the automatic commit message"
,
"cn"
:
"合并的 commit message"
}
}
,
"--commit_message"
:
{
"#synopsis"
:
"<body>"
,
"#desc"
:
{
"en"
:
"Extra detail to append to automatic commit message"
,
"cn"
:
"commit message 的额外更多信息 commit message body"
}
}
,
"#option:Required"
:
[
"--repo|-r"
]
,
"#option:Optional"
:
[
"--merge_method"
,
"--commit_title"
,
"--commit_message"
]
,
"#1"
:
{
"#desc"
:
{
"en"
:
"PR number"
,
"cn"
:
"PR 序号"
}
}
}
,
"create"
:
{
"#desc"
:
{
"en"
:
"Create pull request"
,
"cn"
:
"创建仓库 pull request"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--title"
:
{
"#synopsis"
:
"<title>"
,
"#desc"
:
{
"en"
:
"pull request title"
,
"cn"
:
"pull request 标题"
}
}
,
"--head"
:
{
"#synopsis"
:
"<branch>"
,
"#desc"
:
{
"en"
:
"source branch"
,
"cn"
:
"源分支"
}
}
,
"--base"
:
{
"#synopsis"
:
"<branch>"
,
"#desc"
:
{
"en"
:
"target branch"
,
"cn"
:
"提交目标分支的名称"
}
}
,
"--body"
:
{
"#synopsis"
:
"<content>"
,
"#desc"
:
{
"en"
:
"pull request content"
,
"cn"
:
"pull request 内容"
}
}
,
"--issue"
:
{
"#synopsis"
:
"<issue>"
,
"#desc"
:
{
"en"
:
"association issue"
,
"cn"
:
"关联 issue"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--title"
,
"--head"
,
"--base"
]
,
"#option:Optional"
:
[
"--body"
,
"--issue"
]
,
"--draft"
:
{
"#desc"
:
{
"en"
:
"set pr as draft"
,
"cn"
:
"设置为草稿"
}
}
,
"--no_maintainer_modify"
:
{
"#desc"
:
{
"en"
:
"Not allow maintainers modify the pull request"
,
"cn"
:
"不允许维护者修改 pull request"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit pull request"
,
"cn"
:
"修改仓库 pull request"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--state"
:
{
"#synopsis"
:
"<open,closed>"
,
"#desc"
:
{
"en"
:
"pr state"
,
"cn"
:
"pull request 状态"
}
,
"#1"
:
{
"#cand"
:
[
{
"open"
:
{
"#desc"
:
{
"en"
:
"The status of the pull request is open"
,
"cn"
:
"pull request 的状态为正在进行"
}
}
}
,
{
"closed"
:
{
"#desc"
:
{
"en"
:
"The status of the pull request is closed"
,
"cn"
:
"pull request 的状态为已关闭"
}
}
}
]
}
}
,
"--title"
:
{
"#synopsis"
:
"<title>"
,
"#desc"
:
{
"en"
:
"pull request title"
,
"cn"
:
"pull request 标题"
}
}
,
"--base"
:
{
"#synopsis"
:
"<branch>"
,
"#desc"
:
{
"en"
:
"target branch"
,
"cn"
:
"提交目标分支的名称"
}
}
,
"--body"
:
{
"#synopsis"
:
"<content>"
,
"#desc"
:
{
"en"
:
"pull request content"
,
"cn"
:
"pull request 内容"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--state"
]
,
"#option:Optional"
:
[
"--title"
,
"--base"
,
"--body"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--no_maintainer_modify"
:
{
"#desc"
:
{
"en"
:
"Not allow maintainers modify the pull request"
,
"cn"
:
"不允许维护者修改 pull request"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"PR number"
,
"cn"
:
"PR 序号"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Show pull request info"
,
"cn"
:
"输出仓库 pull request 信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"PR number"
,
"cn"
:
"PR 序号"
}
}
}
}
,
"hook"
:
{
"#desc"
:
{
"en"
:
"repo webhooks management"
,
"cn"
:
"仓库钩子管理"
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List repo webhook"
,
"cn"
:
"罗列仓库钩子"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--csv"
:
{
"#desc"
:
{
"en"
:
"output csv data"
,
"cn"
:
"以 csv 格式输出获取数据"
}
}
,
"--yml"
:
{
"#desc"
:
{
"en"
:
"output yml data"
,
"cn"
:
"以 yml 格式输出获取数据"
}
}
}
,
"create"
:
{
"#desc"
:
{
"en"
:
"Create repo webhook"
,
"cn"
:
"创建仓库钩子"
}
,
"#tip"
:
[
{
"en"
:
"events: https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads"
,
"cn"
:
"事件列表: https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--url"
:
{
"#synopsis"
:
"<url>"
,
"#desc"
:
{
"en"
:
"The URL to which the payloads will be delivered"
,
"cn"
:
"钩子触发的远程 URL"
}
}
,
"--events"
:
{
"#synopsis"
:
"<events(separator ,)>"
,
"#desc"
:
{
"en"
:
"events the hook is triggered for"
,
"cn"
:
"触发钩子的事件"
}
}
,
"--name"
:
{
"#synopsis"
:
"<webhook_name>"
,
"#desc"
:
{
"en"
:
"webhook name"
,
"cn"
:
"webhook 名字"
}
}
,
"--content_type"
:
{
"#desc"
:
{
"en"
:
"Requtest content_type"
,
"cn"
:
"请求参考传递类型"
}
,
"#1"
:
{
"#cand"
:
[
{
"json"
:
{
"#desc"
:
{
"en"
:
"JSON data format"
,
"cn"
:
"JSON 数据格式"
}
}
}
,
{
"form"
:
{
"#desc"
:
{
"en"
:
"form type"
,
"cn"
:
"表单类型"
}
}
}
]
}
}
,
"--secret"
:
{
"#synopsis"
:
"<secret>"
,
"#desc"
:
{
"en"
:
"the secret will be used as the key to generate the HMAC hex digest"
,
"cn"
:
"该密钥将用作生成 HMAC 十六进制摘要的密钥"
}
}
,
"--token"
:
{
"#synopsis"
:
"<token>"
,
"#desc"
:
{
"en"
:
"set token"
,
"cn"
:
"设置token"
}
}
,
"--digest"
:
{
"#synopsis"
:
"<digest>"
,
"#desc"
:
{
"en"
:
"digest information"
,
"cn"
:
"摘要信息"
}
}
,
"--insecure_ssl"
:
{
"#synopsis"
:
"<insecure_ssl>"
,
"#desc"
:
{
"en"
:
"Determines whether the SSL certificate of the host for url will be verified when delivering payloads"
,
"cn"
:
"在传送有效负载时验证 url 主机的 SSL 证书"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--url"
]
,
"#option:Optional"
:
[
"--events"
,
"--name"
,
"--content_type"
,
"--secret"
,
"--token"
,
"--digest"
,
"--insecure_ssl"
]
,
"--active"
:
{
"#desc"
:
{
"en"
:
"Determines if notifications are sent when the webhook is triggered"
,
"cn"
:
"在触发 Webhook 时发送通知"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit repo webhook configure"
,
"cn"
:
"修改仓库钩子"
}
,
"#tip"
:
[
{
"en"
:
"events: https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads"
,
"cn"
:
"事件列表: https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--url"
:
{
"#synopsis"
:
"<url>"
,
"#desc"
:
{
"en"
:
"The URL to which the payloads will be delivered"
,
"cn"
:
"钩子触发的远程 URL"
}
}
,
"--events"
:
{
"#synopsis"
:
"<events(separator ,)>"
,
"#desc"
:
{
"en"
:
"events the hook is triggered for"
,
"cn"
:
"触发钩子的事件"
}
}
,
"--name"
:
{
"#synopsis"
:
"<webhook_name>"
,
"#desc"
:
{
"en"
:
"webhook name"
,
"cn"
:
"webhook 名字"
}
}
,
"--content_type"
:
{
"#synopsis"
:
"<content_type>"
,
"#desc"
:
{
"en"
:
"Requtest content_type"
,
"cn"
:
"请求参考传递类型"
}
,
"#1"
:
{
"#cand"
:
[
{
"json"
:
{
"#desc"
:
{
"en"
:
"JSON data format"
,
"cn"
:
"JSON 数据格式"
}
}
}
,
{
"form"
:
{
"#desc"
:
{
"en"
:
"form type"
,
"cn"
:
"表单类型"
}
}
}
]
}
}
,
"--secret"
:
{
"#synopsis"
:
"<secret>"
,
"#desc"
:
{
"en"
:
"the secret will be used as the key to generate the HMAC hex digest"
,
"cn"
:
"该密钥将用作生成 HMAC 十六进制摘要的密钥"
}
}
,
"--token"
:
{
"#synopsis"
:
"<token>"
,
"#desc"
:
{
"en"
:
"set token"
,
"cn"
:
"设置 token"
}
}
,
"--digest"
:
{
"#synopsis"
:
"<digest>"
,
"#desc"
:
{
"en"
:
"digest information"
,
"cn"
:
"摘要信息"
}
}
,
"--insecure_ssl"
:
{
"#synopsis"
:
"<insecure_ssl>"
,
"#desc"
:
{
"en"
:
"Determines whether the SSL certificate of the host for url will be verified when delivering payloads"
,
"cn"
:
"在传送有效负载时验证 url 主机的 SSL 证书"
}
}
,
"--active"
:
{
"#desc"
:
{
"en"
:
"Determines if notifications are sent when the webhook is triggered"
,
"cn"
:
"在触发 Webhook 时发送通知"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"webhooks ID (obtain by `x gh repo hook ls`)"
,
"cn"
:
"仓库钩子 ID (可通过 `x gh repo hook ls` 获取)"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Show repo webhook detailed information"
,
"cn"
:
"输出仓库钩子信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"钩子的唯一标识符"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"webhooks ID (obtain by `x gh repo hook ls`)"
,
"cn"
:
"仓库钩子 ID (可通过 `x gh repo hook ls` 获取)"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo webhook"
,
"cn"
:
"删除仓库钩子"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略删除提示拦截"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"webhooks ID (obtain by `x gh repo hook ls`)"
,
"cn"
:
"仓库钩子 ID (可通过 `x gh repo hook ls` 获取)"
}
}
}
}
,
"branch"
:
{
"#desc"
:
{
"en"
:
"repo branch management"
,
"cn"
:
"仓库分支管理"
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"Interactive UI show repo branch"
,
"cn"
:
"交互式表格显示仓库分支"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo branch ls -r x-cmd/x-cmd"
,
"en"
:
"Using an interactive UI, list all branches of the x-cmd/x-cmd repository"
,
"cn"
:
"用交互式 UI, 列出 x-cmd/x-cmd 仓库所有的分支"
}
,
{
"cmd"
:
"x gh repo branch ls --protected --repo x-cmd/x-cmd"
,
"en"
:
"Using an interactive UI, list all protected branches in the x-cmd/x-cmd repository"
,
"cn"
:
"用交互式 UI, 列出 x-cmd/x-cmd 仓库所有受保护的分支"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--protected"
:
{
"#desc"
:
{
"en"
:
"returns only protected branches"
,
"cn"
:
"仅返回受保护的分支"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--csv"
:
{
"#desc"
:
{
"en"
:
"output csv data"
,
"cn"
:
"以 csv 格式输出获取数据"
}
}
,
"--yml"
:
{
"#desc"
:
{
"en"
:
"output yml data"
,
"cn"
:
"以 yml 格式输出获取数据"
}
}
}
,
"ll"
:
{
"#desc"
:
{
"en"
:
"List repo branch list"
,
"cn"
:
"罗列仓库分支列表"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo branch ll -r x-cmd/x-cmd"
,
"en"
:
"List all branches of the x-cmd/x-cmd repository with terminal table"
,
"cn"
:
"用终端表格, 列出 x-cmd/x-cmd 仓库所有的分支"
}
,
{
"cmd"
:
"x gh repo branch ll --protected --repo x-cmd/x-cmd"
,
"en"
:
"List all protected branches in the x-cmd/x-cmd repository with terminal table"
,
"cn"
:
"用终端表格, 列出 x-cmd/x-cmd 仓库所有受保护的分支"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--protected"
:
{
"#desc"
:
{
"en"
:
"returns only protected branches"
,
"cn"
:
"仅返回受保护的分支"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--csv"
:
{
"#desc"
:
{
"en"
:
"output csv data"
,
"cn"
:
"以 csv 格式输出获取数据"
}
}
,
"--yml"
:
{
"#desc"
:
{
"en"
:
"output yml data"
,
"cn"
:
"以 yml 格式输出获取数据"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Show the branch detail info"
,
"cn"
:
"输出仓库分支详细信息"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo branch info --repo x-cmd/x-cmd main"
,
"en"
:
"List the details of the main branch in the x-cmd/x-cmd repository"
,
"cn"
:
"列出 x-cmd/x-cmd 仓库 main 分支的详细信息"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
}
,
"ref"
:
{
"#desc"
:
{
"en"
:
"Show the branch ref info"
,
"cn"
:
"输出 Git 数据库的 branch 引用信息"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo branch ref -r x-cmd/x-cmd main"
,
"en"
:
"Show the main branch ref info of x-cmd/x-cmd"
,
"cn"
:
"输出 x-cmd/x-cmd 仓库的 main 分支的引用信息"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
}
,
"create"
:
{
"#desc"
:
{
"en"
:
"Create repo branch"
,
"cn"
:
"创建仓库分支"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--ref"
:
{
"#synopsis"
:
"<base>"
,
"#desc"
:
{
"en"
:
"base branch name or .sha=<ref_SHA>"
,
"cn"
:
"源分支名称或 .sha=<ref_SHA>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
}
,
"default"
:
{
"#desc"
:
{
"en"
:
"Setup repo default branch"
,
"cn"
:
"设置仓库默认分支"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
}
,
"rename"
:
{
"#desc"
:
{
"en"
:
"rename the repo branch"
,
"cn"
:
"仓库分支重命名"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--branch"
:
{
"#synopsis"
:
"<base>"
,
"#desc"
:
{
"en"
:
"base branch name"
,
"cn"
:
"源分支名称"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch new name"
,
"cn"
:
"分支新名称"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo branch"
,
"cn"
:
"删除仓库分支"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
}
,
"protection"
:
{
"#desc"
:
{
"en"
:
"repo protection branch management"
,
"cn"
:
"仓库保护分支管理"
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"protection branch list"
,
"cn"
:
"罗列保护分支"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"protection branch info"
,
"cn"
:
"获取保护分支信息"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"set"
:
{
"#desc"
:
{
"en"
:
"Set repo protection branch"
,
"cn"
:
"设置仓库保护分支"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--strict"
:
{
"#desc"
:
{
"en"
:
"Require branches to be up to date before merging"
,
"cn"
:
"要求分支在合并之前保持最新"
}
}
,
"--admins"
:
{
"#desc"
:
{
"en"
:
"enforce required status checks for repository administrators"
,
"cn"
:
"对存储库管理员强制实施所需的状态检查"
}
,
"#1"
:
{
"#cand"
:
[
{
"true"
:
{
"#desc"
:
{
"en"
:
"Set to true to enforce required status checks for repository administrators"
,
"cn"
:
"设置为 true 以强制存储库管理员执行所需的状态检查"
}
}
}
,
{
"false"
:
{
"#desc"
:
{
"en"
:
"Set to false to not enforce required status checks for repository administrators"
,
"cn"
:
"设置为 false 以不强制存储库管理员执行所需的状态检查"
}
}
}
,
{
"null"
:
{
"#desc"
:
{
"en"
:
"Set to null to disable"
,
"cn"
:
"设置为 null 以禁用"
}
}
}
]
}
}
,
"--history"
:
{
"#desc"
:
{
"en"
:
"Require branches to be up to date before merging"
,
"cn"
:
"防止将合并提交推送到匹配的分支"
}
}
,
"--force_push"
:
{
"#desc"
:
{
"en"
:
"Permit force pushes for all users with push access"
,
"cn"
:
"允许所有具有推送访问权限的用户进行强制推送"
}
}
,
"--deletions"
:
{
"#desc"
:
{
"en"
:
"Allow users with push access to delete matching branches"
,
"cn"
:
"允许具有推送访问权限的用户删除匹配的分支"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
}
,
"unset"
:
{
"#desc"
:
{
"en"
:
"Remove repo protection branch strategy"
,
"cn"
:
"移除仓库保护分支策略"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名"
}
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
}
}
,
"tag"
:
{
"#desc"
:
{
"en"
:
"repo tag management"
,
"cn"
:
"仓库标签管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo tag create --repo <owner/repo> --object <commit_sha> --message <message> --name <username> --email <email> v0.0.1"
,
"en"
:
"Create a v0.0.1 tag for the <commit_sha> of the <owner/repo> remote repository"
,
"cn"
:
"为 GitHub 的 <owner/repo> 的远程仓库为 <commit_sha> 创建一个 v0.0.1 的标签"
}
]
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List repo tag list"
,
"cn"
:
"罗列仓库标签列表"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--tag_sha"
:
{
"#desc"
:
{
"en"
:
"Returns Git database that match tag refs format, where returned SHA is tag_sha"
,
"cn"
:
"以 Git 数据库的 tag 引用格式输出，其中返回的 SHA 为 tag_sha"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--csv"
:
{
"#desc"
:
{
"en"
:
"output csv data"
,
"cn"
:
"以 csv 格式输出获取数据"
}
}
,
"--yml"
:
{
"#desc"
:
{
"en"
:
"output yml data"
,
"cn"
:
"以 yml 格式输出获取数据"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Show the tag detail info"
,
"cn"
:
"输出仓库标签详细信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"tag name e.g (v0.0.1) or .sha=<tag_sha>"
,
"cn"
:
"标签名称 e.g (v0.0.1) 或 .sha=<tag_sha>"
}
}
}
,
"ref"
:
{
"#desc"
:
{
"en"
:
"Show the tag ref info"
,
"cn"
:
"输出 Git 数据库的 tag 引用信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"tag name e.g (v0.0.1)"
,
"cn"
:
"标签名称 e.g (v0.0.1)"
}
}
}
,
"create"
:
{
"#desc"
:
{
"en"
:
"Create repo tag"
,
"cn"
:
"创建仓库标签"
}
,
"#tip"
:
[
{
"en"
:
"`--object` is usually created with the latest commit of the specified branch, and the branch <commit_sha> you can obtain through `x gh repo branch ...`"
,
"cn"
:
"`--object` 通常是以指定分支最新的 commit 进行创建标签，而分支对应 <commit_sha> 你可以通过 `x gh repo branch ...` 的信息进行获取"
}
]
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo tag create --repo <owner/repo> --object <commit_sha> --message <message> --name <username> --email <email> v0.0.1"
,
"en"
:
"Create a v0.0.1 tag base the <commit_sha> of the <owner/repo> remote repository"
,
"cn"
:
"为 GitHub 的 <owner/repo> 的远程仓库基于 <commit_sha> 创建一个 v0.0.1 的标签"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--type"
:
{
"#synopsis"
:
"<commit,tree,blob>"
,
"#desc"
:
{
"en"
:
"The type of the git object tagging"
,
"cn"
:
"git 标签对象的类型"
}
}
,
"--object"
:
{
"#synopsis"
:
"<SHA>"
,
"#desc"
:
{
"en"
:
"The SHA of the git object this is tagging"
,
"cn"
:
"git 标记对象的 SHA"
}
}
,
"--message"
:
{
"#synopsis"
:
"<message>"
,
"#desc"
:
{
"en"
:
"The tag message"
,
"cn"
:
"标签信息"
}
}
,
"--name"
:
{
"#synopsis"
:
"<username>"
,
"#desc"
:
{
"en"
:
"The name of the author of the tag"
,
"cn"
:
"标签作者名称"
}
}
,
"--email"
:
{
"#synopsis"
:
"<email>"
,
"#desc"
:
{
"en"
:
"The email of the author of the tag"
,
"cn"
:
"标签作者邮箱"
}
}
,
"--date"
:
{
"#synopsis"
:
"<date>"
,
"#desc"
:
{
"en"
:
"The date the tag was authored"
,
"cn"
:
"标签创建日期"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--object"
,
"--message"
,
"--name"
,
"--email"
]
,
"#option:Optional"
:
[
"--type"
,
"--date"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"tag name e.g (v0.0.1)"
,
"cn"
:
"标签名称 e.g (v0.0.1)"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo tag"
,
"cn"
:
"删除仓库标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"tag name e.g (v0.0.1)"
,
"cn"
:
"标签名称 e.g (v0.0.1)"
}
}
}
}
,
"release"
:
{
"#desc"
:
{
"en"
:
"repo release management"
,
"cn"
:
"仓库发布管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo release ls -r x-cmd/x-cmd"
,
"en"
:
"List all released versions of x-cmd/x-cmd repository"
,
"cn"
:
"列出 x-cmd/x-cmd 仓库所有的发布版本"
}
,
{
"cmd"
:
"x gh repo release create -r x-cmd/x-cmd --tag v0.0.1"
,
"en"
:
"Create release for the v0.0.1 tag"
,
"cn"
:
"为 v0.0.1 标签创建发行版本"
}
,
{
"cmd"
:
"x gh repo release attachment upload --repo <owner/repo> --release_id <releaese_id> <file_path>"
,
"en"
:
"Upload <file_path> file as <releaese_id> release attachments on <owner/repo> repo"
,
"cn"
:
"上传 <file_path> 文件作为 <owner/repo> 仓库中 <releaese_id> 发行版本的附件资源"
}
]
,
"$ref"
:
"x-advise://gh/data/release/index.jso"
}
,
"label"
:
{
"#desc"
:
{
"en"
:
"repo issue labels management"
,
"cn"
:
"仓库 issue 标签管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo label ls -r x-cmd/x-cmd"
,
"en"
:
"List all labels for the x-cmd/x-cmd repository"
,
"cn"
:
"列出 x-cmd/x-cmd 仓库的所有 label"
}
,
{
"cmd"
:
"x gh repo label create -r x-cmd/x-cmd enhancement"
,
"en"
:
"Create an \"enhancement\" label for x-cmd/x-cmd"
,
"cn"
:
"给 x-cmd/x-cmd 创建一个 enhancement 的标签"
}
,
{
"cmd"
:
"x gh repo label rm --repo user/myrepo enhancement"
,
"en"
:
"Remove the \"enhancement\" label from x-cmd/x-cmd"
,
"cn"
:
"删除 user/myrepo 仓库的 enhancement 标签"
}
]
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List all labels for repo"
,
"cn"
:
"罗列仓库的所有标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--csv"
:
{
"#desc"
:
{
"en"
:
"output csv data"
,
"cn"
:
"以 csv 格式输出获取数据"
}
}
,
"--yml"
:
{
"#desc"
:
{
"en"
:
"output yml data"
,
"cn"
:
"以 yml 格式输出获取数据"
}
}
}
,
"create"
:
{
"#desc"
:
{
"en"
:
"Create a label for repo"
,
"cn"
:
"为仓库创建标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--color"
:
{
"#synopsis"
:
"<hex_code>"
,
"#desc"
:
{
"en"
:
"The hexadecimal color code for the label (without #)"
,
"cn"
:
"标签的十六进制颜色代码 (不包含 #)"
}
}
,
"--description"
:
{
"#synopsis"
:
"<str>"
,
"#desc"
:
{
"en"
:
"A short description of the label"
,
"cn"
:
"标签的描述"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Label name"
,
"cn"
:
"标签名称"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Update a label for repo"
,
"cn"
:
"更新仓库的标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--color"
:
{
"#synopsis"
:
"<hex_code>"
,
"#desc"
:
{
"en"
:
"The hexadecimal color code for the label (without #)"
,
"cn"
:
"标签的十六进制颜色代码 (不包含 #)"
}
}
,
"--description"
:
{
"#synopsis"
:
"<str>"
,
"#desc"
:
{
"en"
:
"A short description of the label"
,
"cn"
:
"标签的描述"
}
}
,
"--new_name"
:
{
"#synopsis"
:
"<str>"
,
"#desc"
:
{
"en"
:
"The new name of the label"
,
"cn"
:
"标签的新名称"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Label name"
,
"cn"
:
"标签名称"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove a label for repo"
,
"cn"
:
"删除仓库的标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Label name"
,
"cn"
:
"标签名称"
}
}
}
}
,
"topic"
:
{
"#desc"
:
{
"en"
:
"repo topics management"
,
"cn"
:
"仓库的主题分类管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo topic add -r user/x-cmd bug"
,
"en"
:
"List all repo topics of x-cmd/x-cmd"
,
"cn"
:
"列出 x-cmd/x-cmd 仓库所有的主题标签"
}
,
{
"cmd"
:
"x gh repo topic ls -r x-cmd/x-cmd"
,
"en"
:
"Add repo topics called bug for x-cmd repo"
,
"cn"
:
"给 x-cmd 仓库添加一个叫 bug 的主题标签"
}
]
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List all repo topics"
,
"cn"
:
"列出仓库所有的主题标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--csv"
:
{
"#desc"
:
{
"en"
:
"output csv data"
,
"cn"
:
"以 csv 格式输出获取数据"
}
}
,
"--yml"
:
{
"#desc"
:
{
"en"
:
"output yml data"
,
"cn"
:
"以 yml 格式输出获取数据"
}
}
}
,
"add"
:
{
"#desc"
:
{
"en"
:
"Add repo topics"
,
"cn"
:
"添加仓库主题标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"The topics to add to the repository.(separated by ,)"
,
"cn"
:
"要添加到仓库的主题标签 (以 , 分隔)"
}
}
}
,
"replace"
:
{
"#desc"
:
{
"en"
:
"Replace all repo topics"
,
"cn"
:
"替换仓库所有的主题标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"The topics to replace to the repository.(separated by ,)"
,
"cn"
:
"要替换仓库的主题标签 (以 , 分隔)"
}
}
}
}
,
"fs"
:
{
"#tag"
:
[
"todo"
]
,
"#desc"
:
{
"cn"
:
"下载仓库文件"
,
"en"
:
"download repo file"
}
}
,
"fsp"
:
{
"#tag"
:
[
"todo"
]
,
"#desc"
:
{
"cn"
:
"下载公开仓库文件"
,
"en"
:
"download public repo file"
}
}
,
"#subcmd:Main"
:
[
"browse|b"
,
"ls"
,
"ll"
,
"info"
,
"create"
,
"edit|ed"
,
"rename"
,
"rm"
,
"cl|clone"
,
"fork"
,
"download"
,
"apply"
,
"team"
]
,
"#subcmd:Management"
:
[
"collaborator|c"
,
"file"
,
"pr"
,
"hook"
,
"branch"
,
"tag"
,
"release"
,
"label"
,
"topic"
]
}

