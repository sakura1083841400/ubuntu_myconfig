{
"#name"
:
{
"x"
:
"x-cmd core function"
}
,
"#synopsis"
:
[
{
"x <subcommand> [<subcommand>...]"
:
null
}
]
,
"#subcmd:common"
:
[
"search_path"
,
"version"
,
"run"
,
"rmrf"
]
,
"#subcmd:runtime"
:
[
"python"
,
"node"
,
"pip"
,
"npm"
,
"npx"
,
"pipx"
,
"sh|bash|zsh|ksh|dash|ash"
]
,
"#subcmd:msg"
:
[
"dingtalk"
,
"qywx"
,
"slack"
,
"feishu"
,
"discord"
,
"telegram"
]
,
"#subcmd:gits"
:
[
"git"
,
"gitb"
,
"gitconfig"
,
"githook"
,
"gh"
,
"gt"
,
"gl"
,
"gcode"
,
"tea"
]
,
"#subcmd:workspace"
:
[
"ws"
,
"wx"
]
,
"#subcmd:enhance"
:
[
"touch|mkdirp|ll"
,
"cd"
,
"cp"
,
"mv"
,
"curl"
]
,
"#subcmd:shortcut"
:
[
"login"
,
"which"
,
"z|uz|zl"
,
"yml2json|y2j"
,
"json2yml|j2y"
]
,
"#subcmd:inner"
:
[
"scotty"
,
"depend"
,
"shim"
,
"alias"
,
"fsiter"
,
"yml"
,
"list"
,
"wchar"
,
"api"
,
"param"
,
"assert"
,
"codi"
,
"retry"
,
"dregistry"
,
"gitb"
,
"http"
,
"ccmd"
,
"jo"
,
"ja"
,
"job"
,
"wsroot"
,
"advise"
,
"httpget"
,
"tmp"
,
"cmdnotfound"
,
"fileage"
,
"semver"
,
"websrc"
,
"is"
,
"hashdir"
,
"set"
,
"json"
,
"test"
,
"ps1env"
,
"tmpl"
,
"str"
,
"dict"
,
"fifo"
,
"osc52"
,
"arg"
,
"xrc"
,
"instance"
,
"humantime"
,
"llist"
,
"trap"
,
"roff"
,
"script"
,
"user"
,
"ui"
,
"pidid"
,
"os"
,
"cawk"
,
"args"
,
"outerr"
,
"tab"
,
"tty"
,
"yo"
,
"rand"
,
"tap"
,
"cama"
,
"daemon"
,
"jsch"
,
"glob"
,
"flow"
,
"seq"
,
"url"
,
"sdict"
,
"appenv"
,
"demo"
,
"browse"
,
"build"
,
"cacert"
,
"envy"
,
"locale"
,
"pkg"
,
"wsl"
,
"jj"
]
,
"#subcmd:todo"
:
[
"acme"
,
"action"
,
"convert"
,
"hiber"
,
"lenv"
,
"gita"
,
"x_fs"
,
"agent"
,
"xml"
,
"logvis"
,
"md"
,
"gofmt"
,
"solo"
,
"jar"
,
"java"
,
"rm"
,
"groovy"
,
"kotlin"
,
"raku"
,
"zef"
,
"zig"
,
"vim"
,
"ourl"
,
"msys2"
,
"nano"
,
"less"
,
"link"
,
"links"
,
"emacs"
,
"code"
,
"micro"
,
"nvim"
,
"p7zip"
]
,
"wsroot"
:
{
"#desc"
:
{
"en"
:
"Show workspace root"
,
"cn"
:
"显示工作空间根目录"
}
}
,
"search_path"
:
{
"#desc"
:
{
"en"
:
"Search path"
,
"cn"
:
"搜索路径"
}
}
,
"run"
:
{
"#desc"
:
{
"en"
:
"Run the specified file"
,
"cn"
:
"运行指定文件"
}
}
,
"upgrade"
:
{
"#desc"
:
{
"en"
:
"Version switching update, if empty, default current version upgrade"
,
"cn"
:
"版本切换和更新，空默认当前版本升级"
}
,
"latest"
:
{
"#desc"
:
{
"en"
:
"Upgrade to the latest version"
,
"cn"
:
"升级到最新版本"
}
}
,
"beta"
:
{
"#desc"
:
{
"en"
:
"Upgrade to the beta version"
,
"cn"
:
"升级到 beta 版本"
}
}
,
"alpha"
:
{
"#desc"
:
{
"en"
:
"Upgrade to the alpha version"
,
"cn"
:
"升级到 alpha 版本"
}
}
}
,
"clear"
:
{
"#desc"
:
{
"en"
:
"Delete the code folder of the target version"
,
"cn"
:
"删除目标版本的代码文件夹"
}
,
"latest"
:
{
"#desc"
:
{
"en"
:
"Delete the code folder ocorresponding to the latest version"
,
"cn"
:
"删除 latest 版本对应的代码文件夹"
}
}
,
"beta"
:
{
"#desc"
:
{
"en"
:
"Delete the code folder ocorresponding to the beta version"
,
"cn"
:
"删除 beta 版本对应的代码文件夹"
}
}
,
"alpha"
:
{
"#desc"
:
{
"en"
:
"Delete the code folder ocorresponding to the alpha version"
,
"cn"
:
"删除 alpha 版本对应的代码文件夹"
}
}
,
"#exec"
:
"___x_cmd_advise__ls -A \"$___X_CMD_ROOT/v/$cur\""
}
,
"uninstall"
:
{
"#desc"
:
{
"en"
:
"Uninstall x-cmd"
,
"cn"
:
"卸载 x-cmd"
}
}
,
"md5"
:
{
"#desc"
:
{
"en"
:
"Calculate the MD5 hashsum of file"
,
"cn"
:
"计算文件的 MD5 散列值"
}
,
"#n"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
,
"#tldr"
:
[
{
"cmd"
:
"x md5 a*.txt"
,
"en"
:
"Calculate all files in the current folder that start with the letter \"a\" and have a file extension of .txt (assuming there are not many of these files and they are all normal files, and the number of files will not exceed the limit of command arguments that can be accepted)."
,
"cn"
:
"计算当前文件夹下文件名为 a 开头且后缀名为 `.txt` 的所有文件（假设这类文件数目不多，且都为正常文件，数目不会超过命令能接受的参数个数限制）"
}
,
{
"cmd"
:
"x fsiter --file | x args 'x md5 $@'"
,
"en"
:
"Calculate the MD5 of all files in the current directory (excluding folders and special files such as device files)."
,
"cn"
:
"计算当前目录下所有文件（不包括文件夹，以及设备文件等特殊文件）的 MD5"
}
,
{
"cmd"
:
"x args 'x md5 $@'"
,
"en"
:
"Read multiple file paths from stdin and calculate the MD5 for each of these files separately."
,
"cn"
:
"从stdin读入多个文件路径，并分别计算这些文件的 MD5"
}
]
}
,
"sha1|sha2|sha256|sha3|sha5|sha512"
:
{
"#desc"
:
{
"en"
:
"Calculate the SHA1 hashsum of file"
,
"cn"
:
"计算文件的 SHA1 散列值"
}
,
"#n"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
,
"#tldr"
:
[
{
"cmd"
:
"x sha1 a*.txt"
,
"en"
:
"Calculate all files in the current folder that start with the letter \"a\" and have a file extension of .txt (assuming there are not many of these files and they are all normal files, and the number of files will not exceed the limit of command arguments that can be accepted)."
,
"cn"
:
"计算当前文件夹下文件名为 a 开头且后缀名为 `.txt` 的所有文件（假设这类文件数目不多，且都为正常文件，数目不会超过命令能接受的参数个数限制）"
}
,
{
"cmd"
:
"x fsiter --file | x args 'x sha1 $@'"
,
"en"
:
"Calculate the SHA1 of all files in the current directory (excluding folders and special files such as device files)."
,
"cn"
:
"计算当前目录下所有文件（不包括文件夹，以及设备文件等特殊文件）的 SHA1"
}
,
{
"cmd"
:
"x args 'x sha1 $@'"
,
"en"
:
"Read multiple file paths from stdin and calculate the SHA1 for each of these files separately."
,
"cn"
:
"从stdin读入多个文件路径，并分别计算这些文件的 SHA1"
}
]
}
,
"touch|mkdirp|ll"
:
{
"#desc"
:
{
"en"
:
"Enhance common linux commands"
,
"cn"
:
"常用 linux 命令增强"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
,
"sh|bash|zsh|ksh|dash|ash"
:
{
"#desc"
:
{
"en"
:
"Execute your script use the corresponding shell"
,
"cn"
:
"使用相应的 shell 执行脚本"
}
,
"#1"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"js|ts"
:
{
"#desc"
:
{
"en"
:
"Execute your script use these environments"
,
"cn"
:
"使用这些环境执行脚本"
}
}
,
"jar|rb|lua"
:
{
"#tag"
:
[
"todo"
]
,
"#desc"
:
{
"en"
:
"Execute your script use these environments"
,
"cn"
:
"使用这些环境执行脚本"
}
}
,
"login"
:
{
"#desc"
:
{
"en"
:
"Login user account"
,
"cn"
:
"登录用户账号"
}
}
,
"which"
:
{
"#desc"
:
{
"en"
:
"Download and output the file path of the file service of hub"
,
"cn"
:
"下载并输出 hub 文件服务的文件路径"
}
}
,
"z|uz|zl"
:
{
"#desc"
:
{
"en"
:
"compress and decompress file"
,
"cn"
:
"压缩和解压文件"
}
,
"#n"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"yml2json|y2j"
:
{
"#desc"
:
{
"en"
:
"Yaml from stdin convert to JSON to stdout"
,
"cn"
:
"YAML 从 stdin 转换为 JSON 输出到 stdout"
}
,
"#1"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"json2yml|j2y"
:
{
"#desc"
:
{
"en"
:
"JSON from stdin convert to YAML to stdout"
,
"cn"
:
"JSON 从 stdin 转换为 YAML 输出到 stdout"
}
,
"#1"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"#1"
:
{
"#exec"
:
"xrc pkg && ___x_cmd_pkg___advise ls_xbin_; ___x_cmd_advise__comp_from_xcmd_or_origin || [ -z \"$cur\" ] || ___x_cmd_advise__file"
}
,
"#n"
:
{
"#exec"
:
"___x_cmd_advise__comp_from_xcmd_or_origin || ___x_cmd_advise__file"
}
,
"#other"
:
{
"en"
:
{
"Please visit our homepage for more information:"
:
"https://x-cmd.com"
}
,
"cn"
:
{
"请访问我们的主页以获取更多信息："
:
"https://x-cmd.com"
}
}
}

