{
"#desc"
:
{
"en"
:
"Raku programming language"
,
"cn"
:
"Raku 编程语言"
}
,
"#synopsis"
:
[
{
"Raku [option] ... [-e program | -M module | file | -] [arg] ..."
:
null
}
]
,
"-"
:
{
"#desc"
:
{
"en"
:
"read program source from STDIN or start REPL if a TTY"
,
"cn"
:
"如果是一个TTY， 从STDIN读取程序源"
}
}
,
"-c"
:
{
"#desc"
:
{
"en"
:
"check syntax only (runs BEGIN and CHECK blocks)"
,
"cn"
:
"仅检查语法（运行BEGIN和check块）"
}
}
,
"--doc"
:
{
"#desc"
:
{
"en"
:
"extract documentation and print it as text"
,
"cn"
:
"提取文档并将其打印为文本"
}
}
,
"-e|program"
:
{
"#desc"
:
{
"en"
:
"one line of program, strict is enabled by default"
,
"cn"
:
"执行一行程序，默认情况下启用strict"
}
}
,
"-h|--help"
:
{
"#desc"
:
{
"en"
:
"display this help text"
,
"cn"
:
"显示帮助文本"
}
}
,
"-n"
:
{
"#desc"
:
{
"en"
:
"run program once for each line of input"
,
"cn"
:
"每行输入运行一次程序"
}
}
,
"-p"
:
{
"#desc"
:
{
"en"
:
"same as -n, but also print $_ at the end of lines"
,
"cn"
:
"与-n相同，但会在行尾打印$_"
}
}
,
"-I|path"
:
{
"#desc"
:
{
"en"
:
"adds the path to the module search path"
,
"cn"
:
"将路径添加到模块搜索路径"
}
}
,
"--target=stage"
:
{
"#desc"
:
{
"en"
:
"specify compilation stage to emit"
,
"cn"
:
"指定要发出的编译阶段"
}
}
,
"--optimize=level"
:
{
"#desc"
:
{
"en"
:
"use the given level of optimization (0..3)"
,
"cn"
:
"使用给定的优化级别（0..3）"
}
}
,
"--rakudo-home=path"
:
{
"#desc"
:
{
"en"
:
"Override the path of the Rakudo runtime files"
,
"cn"
:
"覆盖Rakudo运行时文件的路径"
}
}
,
"-o|--output=name"
:
{
"#desc"
:
{
"en"
:
"specify name of output file"
,
"cn"
:
"指定输出文件的名称"
}
}
,
"-v|--version"
:
{
"#desc"
:
{
"en"
:
"display version information"
,
"cn"
:
"显示版本信息"
}
}
,
"-V"
:
{
"#desc"
:
{
"en"
:
"print configuration summary"
,
"cn"
:
"打印配置摘要"
}
}
,
"--stagestats"
:
{
"#desc"
:
{
"en"
:
"display time spent in the compilation stages"
,
"cn"
:
"显示编译阶段花费的时间"
}
}
,
"--ll-exception"
:
{
"#desc"
:
{
"en"
:
"display a low level backtrace on errors"
,
"cn"
:
"显示错误的低级别回溯"
}
}
,
"--doc=module"
:
{
"#desc"
:
{
"en"
:
"use Pod::To::[module] to render inline documentation"
,
"cn"
:
"使用Pod:：To:：[module]呈现内联文档"
}
}
,
"--repl-mode=interactive|non-interactive"
:
{
"#desc"
:
{
"en"
:
"when running without \"-e\" or filename arguments,\na REPL is started. By default, if STDIN is a TTY,\n\"interactive\" REPL is started that shows extra messages and\nprompts, otherwise a \"non-interactive\" mode is used where\nSTDIN is read entirely and evaluated as if it were a program,\nwithout any extra output (in fact, no REPL machinery is even\nloaded). This option allows to bypass TTY detection and\nforce one of the REPL modes.\n"
,
"cn"
:
"在没有“-e”或filename参数的情况下运行时，\n开始REPL。默认情况下如果STDIN是TTY，\n启动“交互式”REPL，显示额外的消息和\n提示，否则使用“非交互式”模式\nSTDIN被完全读取并被评估，就好像它是一个程序一样，\n没有任何额外的输出（事实上，没有REPL机器\n加载）。此选项允许绕过TTY检测\n强制REPL模式之一。\n"
}
}
,
"--profile[=name]"
:
{
"#desc"
:
{
"en"
:
"write profile information to a file\nExtension controls format:\n  .json outputs in JSON\n  .sql  outputs in SQL\n  any other extension outputs in HTML\n"
,
"cn"
:
"将配置文件信息写入文件\n扩展控件格式：\n  .json文件输出json\n  .sql输出sql\n  其他扩展输出HWML\n"
}
}
,
"--profile-compile[=name]"
:
{
"#desc"
:
{
"en"
:
"write compile-time profile information to a file\nExtension controls format:\n  .json outputs in JSON\n  .sql  outputs in SQL\n  any other extension outputs in HTML\n"
,
"cn"
:
"将编译时配置文件信息写入文件\n扩展控件格式：\n.json文件输出json\n.sql输出sql\n其他扩展输出HWML\n"
}
}
,
"--profile-kind[=name]"
:
{
"#desc"
:
{
"en"
:
"choose the type of profile to generate\ninstrumented - performance measurements (default)\nheap - record heap snapshots after every garbage\ncollector run\n"
,
"cn"
:
"选择要生成的配置文件的类型\n仪表化-性能测量（默认）\n在每个垃圾收集器运行之后记录快照\n"
}
}
,
"--profile-filename=name"
:
{
"#desc"
:
{
"en"
:
"provide a different filename for profile.\nExtension controls format:\n  .json outputs in JSON\n  .sql  outputs in SQL\n  any other extension outputs in HTML\nThis option will go away in a future Rakudo release\n"
,
"cn"
:
"为配置文件提供不同的文件名\n扩展控件格式：\njson中的.json输出\nsql中的.sql输出\nHTML中的任何其他扩展输出\n这个选项将在未来的Rakudo版本中消失\n"
}
}
,
"--profile-stage=stage"
:
{
"#desc"
:
{
"en"
:
"write profile information for the given compilation\nstage to a file. Use --profile-compile to set name\nand format\n"
,
"cn"
:
"为给定的编译编写配置文件信息\n阶段到文件。使用--profile compile设置名称\n和格式\n"
}
}
,
"--full-cleanup"
:
{
"#desc"
:
{
"en"
:
"try to free all memory and exit cleanly"
,
"cn"
:
"尝试释放所有内存并干净退出"
}
}
,
"--debug-port=port"
:
{
"#desc"
:
{
"en"
:
"listen for incoming debugger connections"
,
"cn"
:
"监听传入的调试器连接"
}
}
,
"--debug-suspend"
:
{
"#desc"
:
{
"en"
:
"pause execution at the entry point"
,
"cn"
:
"在入口点暂停执行"
}
,
"--tracing"
:
{
"#desc"
:
{
"en"
:
"output a line to stderr on every interpreter instr (only if enabled in MoarVM)"
,
"cn"
:
"在每个解释器instr上向stderr输出一行（仅当在MoarVM中启用时）"
}
}
}
}

