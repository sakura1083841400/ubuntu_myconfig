{
"--allow-uncaught"
:
{
"#desc"
:
"Allow uncaught errors to propagate [boolean]"
}
,
"-A|--async-only"
:
{
"#desc"
:
"Require all tests to use a callback (async) or return a Promise [boolean]"
}
,
"-b|--bail"
:
{
"#desc"
:
"Abort (\"bail\") after first test failure [boolean]"
}
,
"--check-leaks"
:
{
"#desc"
:
"Check for global variable leaks [boolean]"
}
,
"--delay"
:
{
"#desc"
:
"Delay initial execution of root suite [boolean]"
}
,
"--dry-run"
:
{
"#desc"
:
"Report tests without executing them [boolean]"
}
,
"--exit"
:
{
"#desc"
:
"Force Mocha to quit after tests complete [boolean]"
}
,
"--fail-zero"
:
{
"#desc"
:
"Fail test run if no test(s) encountered [boolean]"
}
,
"--forbid-only"
:
{
"#desc"
:
"Fail if exclusive test(s) encountered [boolean]"
}
,
"--forbid-pending"
:
{
"#desc"
:
"Fail if pending test(s) encountered [boolean]"
}
,
"--global|--globals"
:
{
"#desc"
:
"List of allowed global variables [array]"
}
,
"-j|--jobs"
:
{
"#desc"
:
"Number of concurrent jobs for --parallel; use 1 to run in serial [number] [default: (number of CPU cores - 1)]"
}
,
"-p|--parallel"
:
{
"#desc"
:
"Run tests in parallel [boolean]"
}
,
"--retries"
:
{
"#desc"
:
"Retry failed tests this many times [number]"
}
,
"-s|--slow"
:
{
"#desc"
:
"Specify\"slow\" test threshold (in milliseconds) [string] [default: 75]"
}
,
"-t|--timeout|--timeouts"
:
{
"#desc"
:
"Specify test timeout threshold (in milliseconds) [string] [default: 2000]"
}
,
"-u|--ui"
:
{
"#desc"
:
"Specify user interface [string] [default: \"bdd\"]"
}
,
"-c|--color|--colors"
:
{
"#desc"
:
"Force-enable color output [boolean]"
}
,
"--diff"
:
{
"#desc"
:
"Show diff on failure\" [boolean] [default: \"true\"]"
}
,
"--full-trace"
:
{
"#desc"
:
"Display full stack traces [boolean]"
}
,
"--inline-diffs"
:
{
"#desc"
:
"Display actual/expected differences inline within each string [boolean]"
}
,
"-R|--reporter"
:
{
"#desc"
:
"Specify reporter to use [string] [default: \"spec\"]"
}
,
"-O|--reporter-option"
:
{
"#desc"
:
"Reporter-specific options"
}
,
"--reporter-options"
:
{
"#desc"
:
"(<k=v,[k1=v1,..]>) [array]"
}
,
"--config"
:
{
"#desc"
:
"Path to config file [string] [default: (nearest rc file)]"
}
,
"-n|--node-option"
:
{
"#desc"
:
"Node or V8 option (no leading\"--\") [array]"
}
,
"--package"
:
{
"#desc"
:
"Path to package.json for config [string]"
}
,
"--extension"
:
{
"#desc"
:
"File extension(s) to load [array] [default: [\"js\",\"cjs\",\"mjs\"]]\",\"$schema\""
}
,
"--file"
:
{
"#desc"
:
"Specify file(s) to be loaded prior to root suite ; execution [array] [default: (none)]"
}
,
"--ignore|--exclude"
:
{
"#desc"
:
"Ignore file(s) or glob pattern(s) [array] [default: (none)]"
}
,
"--recursive"
:
{
"#desc"
:
"Look for tests in subdirectories [boolean]"
}
,
"-r|--require"
:
{
"#desc"
:
"Require module [array] [default: (none)]"
}
,
"-S|--sort"
:
{
"#desc"
:
"Sort test files [boolean]"
}
,
"-w|--watch"
:
{
"#desc"
:
"Watch files in the current working directory for changes [boolean]"
}
,
"--watch-files"
:
{
"#desc"
:
"List of paths or globs to watch [array]"
}
,
"--watch-ignore"
:
{
"#desc"
:
"List of paths or globs to exclude from watching [array] [default: [\"node_modules\",\".git\"]]"
}
,
"-f|--fgrep"
:
{
"#desc"
:
"Only run tests containing this string [string]"
}
,
"-g|--grep"
:
{
"#desc"
:
"Only run tests matching this string or regexp [string]"
}
,
"-i|--invert"
:
{
"#desc"
:
"Inverts --grep and --fgrep matches [boolean]"
}
,
"spec"
:
{
"#desc"
:
"One or more files, directories, or globs to test [array] [default: [\"test\"]]"
}
,
"-h|--help"
:
{
"#desc"
:
"Show usage information & exit [boolean]"
}
,
"-V|--version"
:
{
"#desc"
:
"Show version number & exit [boolean]"
}
,
"--list-interfaces"
:
{
"#desc"
:
"List built-in user interfaces & exit [boolean]"
}
,
"--list-reporters"
:
{
"#desc"
:
"List built-in reporters & exit [boolean]"
}
}

